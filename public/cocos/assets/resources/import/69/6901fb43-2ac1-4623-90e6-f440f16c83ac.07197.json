[1,0,0,[["cc.TextAsset",["_name","text"],1]],[[0,0,1,3]],[[0,"texas_net","package texas.net.proto;\r\n\r\noption java_package=\"com.qufan.texas.service\";\r\noption java_outer_classname=\"TexasNet\";\r\n\r\n// 服务器之间的消息有抬头, 用大写字母标示 router -> R   gateway -> G   web -> W\r\n// example : web -> router : WRxxxNtf\r\n\r\n// 已签名的body\r\nmessage SignedBody{\r\n    optional string sign=1;\r\n    optional bytes body=2;\r\n}\r\n\r\n// 对body进行签名包装\r\nmessage SafeShell{\r\n    optional int32 sign_type = 1;\r\n    optional int32 encrypt_type = 2;\r\n    optional int32 uid = 3;\r\n    optional int32 random = 4;\r\n    optional int64 time = 5;\r\n    optional int32 time_zone = 6;\r\n    optional int32 version = 7;\r\n    optional string channel = 8;\r\n    optional bytes extra = 9;\r\n    optional string sign = 10;\r\n    optional bytes body = 11;\r\n}\r\n\r\n\r\n\r\n //热更新\r\nmessage PatchUpdate {                             //热更新\r\n    optional int32 patch_status = 1;              // 0不更新， 1建议更新， 2强制更新\r\n    optional string patch_url_prefix = 2;         // 更新文件的地址前缀\r\n    optional string patch_file_list= 3;           // MD5文件\r\n    optional string patch_md5sum = 4;             // 热更新文件MD5和值\r\n    optional string update_prompt= 5;             //更新提示语\r\n}\r\n\r\nmessage UserLoginRsp {\r\n    optional int32 uin = 1;                             // user id\r\n    optional string key = 2;                            // user password\r\n    optional string nick = 3;                           // user nick\r\n    optional int32 sex = 4;                             // user sex\r\n    optional int64 gold = 5;                            // user gold\r\n    optional int64 win = 6;                             // user win times\r\n    optional int64 lose = 7;                            // user lose times\r\n    optional int32 day = 8;                             // user login days\r\n    optional string title = 9;                          // user  title\r\n    optional int32 vip_level = 10;                      // user vip level\r\n    optional bool got_day_reward = 11;                  // user day reward flag\r\n    optional bool got_vip_day_reward = 12;              // user vip_day_reward flag\r\n    optional bool recharged = 13;                       // recharge?\r\n    optional int32 view_times = 14;                     // 观看次数\r\n    optional int32 play_over_times = 15;                // 玩到底的次数\r\n    optional int32 play_times = 16;                     // 玩的次数\r\n    repeated int32 max_history_cards = 17 ;             // 历史最大手牌\r\n    optional int64 max_history_win_chips = 18;          // 最大赢取筹码数\r\n    optional int32 level =19;                           // 等级\r\n    optional bool beauty = 20;                          // 是否是认证美女\r\n    optional bool got_beauty_day_reward = 21;           // 是否获取了美女每日奖励\r\n    optional bool got_beauty_rank_week_reward = 22;     //  获取美女每周排行奖励\r\n    optional int32 last_week_beauty_rank = 23;          // 上周美女排行\r\n    optional string invite_code = 24;                   // 邀请码\r\n    optional int32 online = 25;                         // 在线人数\r\n    optional int32 old_roomid = 26;                     // 给断线重连用的\r\n    optional int32 room_type = 27;                      // 给断线重连用的, 房间类型 0无, 1正常德州, 2金花场\r\n    optional int32 account_bind_status = 28;            // 帐号绑定状态. 果盘，QQ\r\n    optional int32 remain_times = 29;                   // 转盘的剩余可转次数\r\n    optional int32 score = 30;                          // 积分\r\n    optional int32 pokerface = 31;                      // 付费表情可使用天数\r\n    optional string portrait = 32;                      // 头像url\r\n    optional SignedBody config = 33;                    // 游戏配置\r\n    optional PatchUpdate patch_update = 34;             // 热更新\r\n    optional int32 card_amount = 35;                    // 房卡数量\r\n    optional int64 max_history_win_chips64 = 36;        // 最大赢取筹码数\r\n    optional int64 diamond_amount = 37;                 // 钻石数量\r\n    repeated ErrorCodeInfo error_list = 38;             // error list\r\n    optional int32 viewer_chat_config = 39;             // 旁观玩家能否发言 1：是， 0 否\r\n    optional int32 game_type = 40;                      // 游戏类型（0:标准局 1:SNG类型 2:MTT类型 3:DDZ类型 4:OMAHA类型 5:多桌sng 6:短牌玩法类型）\r\n    optional int32 user_type = 41;                      // 用户类型（0：自然人，1：公司）\r\n    message Desks{\r\n        optional int32 object_id = 1;    // 桌子id或者赛事id，根据game_type类型判断\r\n        optional int32 game_type = 2;    // game_type\r\n        optional int32 status = 3;       // 0站起，1在玩\r\n\t\toptional int32 zoom_id = 4;      // zoomid   zoom 玩法使用  game_type 16   添加\r\n        optional int32 game_category = 5;\r\n    }\r\n    repeated Desks desks = 42;                           // 在玩的桌子\r\n    repeated ErrorCodeInfo msg_list = 43;                // message list\r\n\toptional int32 update_details = 44;                  // 是否需要收集个人信息(0:不需要 1:需要)\r\n    optional string odds_conf = 47;  // json格式 例：{1:  (30,   24,  20)} 保险赔率 key为Outs数 value 依次为 德州赔率 PLO4赔率 短牌赔率 注: outs为20+ 都为 outs为20的赔率\r\n}\r\n\r\n\r\nmessage ErrorCodeInfo {\r\n    optional int32 id = 1;\r\n    optional string desc = 2;\r\n}\r\n\r\n//定时心跳\r\nmessage UserHeartBeatReq {\r\n}\r\n\r\nmessage UserHeartBeatRsp{\r\n}\r\n\r\n\r\n// 专门用于通知客户端展示吐司\r\nmessage ToastNtf {\r\n    optional string content = 1;    // 吐司内容\r\n    optional int32 show_seconds = 2;    // 吐司展示时间(单位:s)\r\n    optional MultiLangMsg multi_lang_msg = 3;\r\n}\r\n\r\n\r\n// 台桌内聊天\r\nmessage DeskChatReq {\r\n    optional string content = 1;\r\n    optional int32 content_type = 2;      // content 类型，0: text文本；1: 语音\r\n    optional int32 desk_id=3;\r\n    optional int32 voice_time = 4;         //语音时长\r\n    optional bytes voice_data = 5;        // 语音信息\r\n}\r\nmessage DeskChatRsp {\r\n}\r\n\r\n// 台桌内聊天通知\r\nmessage EvtDeskChat {\r\n    optional int32 op_uin = 1;\r\n    optional string nick  =2;\r\n    optional string content =3;\r\n    optional int32 uin =4;\r\n    optional int32 deskid=5;\r\n    optional int32 roomid=6;\r\n    optional DeskPlayInfo play_info =7;\r\n    optional int32 gender = 8;\r\n    optional string portrait = 9;             // 头像url\r\n    optional int32 content_type = 10;      // content 类型，0: text文本；1: 语音\r\n    optional int32 voice_time = 11;         // 语音时长\r\n    optional string voice_url = 12;             // 语音url\r\n}\r\n\r\n\r\n// 获取其他人的资料\r\nmessage OtherUserInfoReq {\r\n    optional int32 other_uin =1;\r\n    optional int32 game_type =2;        //0-获取德州；6-获取奥马哈\r\n    optional int32 desk_id = 3;\r\n}\r\nmessage OtherUserInfoRsp {\r\n    optional string nick = 1;\r\n    optional int64 gold =2;\r\n    optional int64 win =3;\r\n    optional int64 lose =4;\r\n    optional string title=5;\r\n    optional int32 sex=6;\r\n    optional int32 play_times = 14;\r\n    optional int32 ruju_prob=15;                        // 入局率\r\n    optional int32 tanpai_prob =16;\r\n    optional int64 win_prob =17;\r\n    optional int32 view_times = 18;\r\n    optional int32 level =22;\r\n    optional string portrait = 26;                      // 头像url\r\n    message Expression{\r\n        optional int32 id = 1;\r\n        optional int64 price = 2;\r\n        optional int32 cost_type = 3;               // 1.消耗金币(默认值) 2.消耗钻石\r\n    }\r\n    repeated Expression expressions = 28;           // 互动表情列表\r\n    optional string ruchi_ratio = 30;               // 入池率\r\n    optional string ruchi_win_ratio = 31;           // 入池胜率\r\n    optional string tanpai_ratio = 32;              // 摊派率\r\n    optional int32 card_amount = 33;                // 房卡数量\r\n    optional int64 diamond_amount = 34;             // 钻石数量\r\n    optional string remark = 36;                    // 备注\r\n    optional string remark_desc = 37;               // 备注描述\r\n    repeated int32 club_manager_uins = 38;          // 俱乐部管理员列表\r\n    optional string flag_icon = 39;                 // 国旗url\r\n    optional string cid=40;                         // 企业ID，如果是非企业用户，该字段是空字符串\r\n    optional string in_the_money_prob = 41;         // 入钱圈率\r\n    optional string preflop_raise_prob = 42;        // 翻牌前加注率\r\n    optional string verification_info = 43;         // 用户头像认证信息\r\n\toptional bool message_is_blocked = 45;            // 消息是否被屏蔽了(包括互动表情、快捷表情、快捷文字)\r\n    optional string team_icon = 46;                   // 团队图标url\r\n    optional int32 poker_style = 47;                // 玩家玩牌风格\r\n    optional int64 group_point = 48;                // 俱乐部积分（-1代表私局）\r\n    optional string country = 49;                    // 国家名称\r\n    optional bool is_guest = 50;                     // 是否为游客\r\n    optional int32 current_hand_count = 51;         // 在本桌玩牌手数\r\n    optional int32 current_vpip_count = 52;         // 在本桌入池手数\r\n    optional string nfts = 53;                      // ntfs头像\r\n    optional string nfts_addr = 54;                 // ntfs头像地址\r\n    optional int32 uin =55;                         // 玩家uin\r\n}\r\n\r\nmessage MultiLangMsg {\r\n    optional int32 content_idx = 1;\r\n    optional string params = 2;  // json格式，key必须是数字，且从1开始顺延。如两个参数{\"1\": \"jack\", \"2\": \"20bb\"}\r\n}\r\n\r\n// 全区广播 cmd: 148\r\nmessage EvtBroadCast {\r\n    optional int32 op_uin=1; // op suer\r\n    optional string content=2; // content\r\n    optional string nick=3;\r\n    optional bool can_block=4;// can block\r\n    optional int32 level=5;                     //level=600则表示赛事消息, level=601授权进入消息，其他则系统消息\r\n    message BroadCastExtendInfo {\r\n        optional string user_nick =1;\r\n        optional string room_name=2;\r\n        optional int64 gold=3;\r\n    }\r\n    optional BroadCastExtendInfo extend_info=6;\r\n    optional string color =7; // broadcast color\r\n    optional int32 play_times = 8; //播放次数\r\n    optional MultiLangMsg multi_lang_msg = 9;\r\n}\r\n\r\n//CMD 150 游戏内弹窗广播\r\nmessage EvtWindowPopupBroadCast{\r\n    optional int32 event_id = 1;\r\n    optional int32 event_type = 2;   // 跳转的赛事类型 1: SNG, 2: MTT\r\n    optional string event_name = 3;  // 赛事名\r\n    optional int32 enter_fee = 4;    // 赛事扣费\r\n    optional string content = 5;\r\n    optional int32 mtt_type = 6;    // 如果赛事类型为mtt, 1: texas. 2: plo_mtt, 如果不是mtt则为0\r\n}\r\n\r\n// 单独通知用户金币变化\r\n\r\nmessage EvtUserGoldChange {\r\n    optional int64 gain_gold=1; // gain gold\r\n    optional int64 gold=2; // gold\r\n    optional string reason=3; // reason\r\n    optional string desc=4 ;//description\r\n    optional int64 group_point= 5; // 俱乐部积分\r\n}\r\n\r\n\r\n// 单独通知用户筹码变化\r\n// cmd 191\r\nmessage EvtUserChipsChange {\r\n    optional int64 delta=1; // 变化的值\r\n    optional int64 chips=2; // 剩余的筹码\r\n    optional string reason=3; // reason\r\n    optional string desc=4 ;//description\r\n    optional int32 uin = 5; // uin\r\n}\r\n\r\n\r\n/* ============================================================================= */\r\n\r\nmessage CustomMade{\r\n    optional string name = 1;           // 私人定制房间名称\r\n    optional int32 must_spend = 2;      // 是否必下前注, 0：否；1：是\r\n    optional int32 last_time = 3;       // 牌局时长，单位秒\r\n    optional int32 remain_time = 4;     // 牌局剩余时长，单位秒\r\n    optional string password = 5;       // 牌桌密码\r\n    optional int32 master_uin = 6;      // 房主uin\r\n    optional string master_name = 7;      // 房主昵称\r\n    optional int32 begin_time = 8;      // 牌局开局时间\r\n    optional int32 is_paused = 9;       // 牌局是否暂停 0：正常进行中 1：牌局已暂停\r\n    optional bool show_count_down = 10;     // 是否展示倒计时\r\n    optional int32 force_flag_display = 11; // 国旗强制显示 0：关闭 1：开启\r\n    optional int32 create_time = 12;        // 创建牌局时间戳\r\n    optional int32 auto_round_down = 13;    // 自动取整开关 0：关闭 1: 开启\r\n    optional int32 sug_minimum_players = 14; // 鱿鱼游戏最小人数\r\n    optional int32 sug_ante = 15;           // 鱿鱼底注金额\r\n    optional int32 post_bb = 16;            // post bb 0: 开启POST BB 1：关闭POST BB  默认开启\r\n    optional int32 dismiss_reason = 17;\r\n    optional int32 voice_chatting = 18;     //语音开关  0关 1开   默认0\r\n}\r\n\r\n//用户进入牌桌\r\nmessage GameEnterDeskReq {\r\n    optional int32 roomid=1;                    // room id\r\n    optional int32 src_deskid=2;                // 如果是换桌过来的话，那么带上原来的deskid，否则传0即可\r\n    optional int32 dst_desk_id=3;               // 目标deskid，为0则系统自动分配\r\n    optional int32 need_password=4;              // 是否需要房间密码\r\n    optional string password=5;                 // password 房间密码\r\n    optional int32 enter_source=6;              // 进桌 来源： 0: 普通来源  1：二维码扫描 （目前两种其他方式以后再增加）\r\n    optional int32 new_desk=7;                  // 是否创建新桌子, 0：否；1：是\r\n    optional int32 just_view=8;                 // 仅仅观战，不坐下, 0：否；1：是\r\n    optional string name = 9;                   // 私人定制房间名称\r\n    optional int32 must_spend = 10;             // 是否必下前注, 0：否；1：是\r\n    optional int32 last_time = 11;              // 牌局时长，单位秒\r\n    optional int32 buyin_limit_multi = 12;      // 买入限制倍数\r\n    optional string invite_code = 13;           // 邀请码\r\n    optional int32 discussion_id = 14;          // 牌桌来源，讨论组id\r\n    optional int32 group_id = 15;               // 进入牌桌来源，圈子id(即目前的俱乐部id)\r\n    optional int32 insurance = 16;              // 牌桌是否支持保险, 0:否 1:是\r\n    optional int32 straddle = 17;               // 牌桌是否支持闭眼注, 0:否 1:是\r\n    optional int32 op_time = 18;                // 玩家操作等待时间的类型，0:等待时间更长(20s)；1:等待时间更短(12s)\r\n    optional string dst_openid = 19;            // 聊天的时候跟谁一起创建的牌桌\r\n    optional int32 call_time = 20;              // 是否开启超长call_time延时   0:否 1:是   不开启超长延时，系统默认的call_time时间为20秒， 开启超长：则为60秒\r\n    optional int32 seat_limit = 21;             // 几人桌\r\n    optional int32 carry_min_multi = 22;        // 最小携带倍数\r\n    optional int32 carry_max_multi = 23;        // 最大携带倍数\r\n    optional int32 need_authority = 24;             // 是否开启授权带入 0:否 1:是\r\n    optional int32 need_protocolpool = 25;          // 是否开启协议分池 0:否 1:是\r\n    optional int32 need_multiplecard = 26;          // 是否开启多次发牌 0:否 1:是\r\n    optional string group_name = 27;                // 俱乐部名称\r\n    optional int32 key_type = 28;                   // 开房类型，0：金币；1:房卡（550版本后不支持房卡，旧版本继续使用） 2:门票（已废弃值） 3：钻石\r\n    optional int32 cost_card = 29;                  // 消耗房卡数量 \r\n    optional int32 location_limit = 30;             // GPS和IP限制开关，0：关闭；1：开启\r\n    optional GPSInfo gps = 31;\r\n    optional int32 bury_card = 32;                  // 自动埋牌开关(0：关闭 1：开启)\r\n    optional int32 cost_diamond = 33;               // 创建桌子需要消耗的钻石数量\r\n    optional int64 carry_min = 34;                  // 最小带入\r\n    optional int64 carry_max = 35;                  // 最大带入\r\n    optional int32 view_openid = 36;                // sng要到谁的位置上去旁观\r\n\toptional int32 alliance_id = 37;                // 联盟id\r\n    optional int32 stakes = 38;                 // 底注\r\n    optional int32 time_bank = 39;              // 摆牌时间\r\n    optional int32 dealing = 40;            // 1: 同时发牌 2：顺序发牌\r\n    optional int32 player_stats_protection = 41;     //   0表示没开启，1表示开\r\n    optional int32 table_stats_protection    = 42;   //  0表示没开启，1表示开\r\n    optional int32 auto_start_switch = 43;           //  自动开桌开关 {开：1 关：0}\r\n    optional int32 auto_start_number = 44;           //  自动开桌人数\r\n    optional int32 clone_table_switch = 45;          //  克隆桌子开关{开：1 关：0}\r\n    optional int32 desk_id_been_copied = 46;        // 自动复制的牌桌ID\r\n    optional int32 need_verify=47;                   // 是否需要检验码\r\n    optional VPIPInfo vpip_info = 50;               // vpip限制相关\r\n    optional int32 player_total_hands = 51;         // 玩家在这个玩法的总手数\r\n    optional int32 player_vpip_times = 52;          // 玩家在这个玩法的入池手数\r\n    optional int32 ofc_play_mode = 53;              // ofc 玩法 -- Regular Progressive Ultimate\r\n    optional int32 has_joker = 54;                  // 有无赖子\r\n\toptional int32 multi_desk = 55;                  // 多桌类型 0表示单桌,1表示多桌\r\n    optional int32 force_flag_display = 56;         // 国旗强制显示 0：关闭 1：开启\r\n    optional Web3EnterDeskInfo web3_enter_desk_info = 57;   // web3新增进桌参数\r\n    optional int32 force_show_cards_switch = 58;    // 强制看牌开关\r\n    optional int32 show_rest_cards_switch = 59;     // 看剩余牌开关\r\n    optional int32 game_duration = 60;               // 牌桌时长\r\n    optional int32 auto_round_down = 61;             // 自动取整开关 0：关闭 1: 开启\r\n    optional int32 game_category = 62;               // 大厅游戏:HALL = 1  私局:PERSONAL = 2\r\n    optional int32 hall_game_conf_id = 63;           // 大厅游戏配置id 服务器使用\r\n    optional int32  miniapp_dst_desk_id = 64;    // 是否为telegram mini_app 进桌\r\n}\r\n\r\nmessage TokenInfo{\r\n    optional int32 network = 1;        // 网络类型 见Network定义\r\n    optional int32 type = 2;           // 代币类型 见TokenType定义\r\n    optional string address  = 3;      // 合约地址 type为自定义类型时 必须非空\r\n    optional string symbol = 4;        // 代币简称 所属于GameEnterDeskReq时 为空\r\n    optional string icon_url = 5;      // 代币图标 所属于GameEnterDeskReq时 为空\r\n}\r\nmessage TokenDeskInfo {\r\n    optional int32 tokens_completed = 1;     // 状态 0: 无交易  1： 等待合约扣款 2：合约扣款成功 3：拒绝合约扣款 4：完成兑换筹码\r\n    optional string transaction_tx = 2;     // 当前订单交易唯一id\r\n    optional int64 tokens_chips = 3;         // 待兑换的筹码(玩家身上的筹码)\r\n}\r\n\r\n// 创桌扩展信息\r\nmessage ExtendDeskInfo {\r\n    optional int32 random_seat = 1;         // 随机入座     0：关闭 1：开启\r\n    optional int32 spectator_mute = 2;       // 旁观者禁言   0：关闭 1：开启\r\n    optional SquidGameInfo squid_info = 3;   // 鱿鱼游戏相关信息\r\n    optional int32 post_bb = 4;              // post bb 0: 开启POST BB 1：关闭POST BB  默认开启\r\n    optional int32 voice_chatting = 5;       //语音开关  0关 1开   默认0\r\n}\r\n\r\nmessage Web3EnterDeskInfo {\r\n    optional bool is_personal_game = 1;            // 是否为私局游戏\r\n    optional bool is_plo_bet_limit = 2;            // plo相关游戏是否有下注限制\r\n    optional bool is_manager_approval_game = 3;    // 是否需要房主审批\r\n    optional int32 rake_mode = 4;                  // 抽水模式\r\n    optional int32 rake_percentage = 5;            // 抽水比例\r\n    optional int32 enter_type = 6;                 // 进桌方式 1\r\n    optional int32 rake_limit = 7;                 // 抽水上限 按BB的倍数(按10倍)\r\n    optional int32 small_blind = 8;                // 小盲值\r\n    optional int32 big_blind = 9;                  // 大盲值\r\n    optional int32 straddle_multiple = 10;         // 抓头值\r\n    optional int32 ante_multiple = 11;             // 前注值\r\n    optional TokenInfo token_info = 12;            // 代币信息\r\n    optional ExtendDeskInfo extend_info = 13;      // 创桌扩展信息\r\n    optional bool is_delayed_hand = 14;            // 是否为延迟看牌功能\r\n}\r\n\r\nmessage VPIPInfo {\r\n    optional int32 restriction_rate = 1;         // 坐下的时候vpip限制\r\n    optional int32 maintenance_rate = 2;         // 维护vpip率\r\n    optional int32 hands_threshold = 3;          // maintenance_rate > 0的时候，表示多少手之后开始计算vpip\r\n}\r\n\r\nmessage GameEnterDeskRsp {\r\n    optional bool invite_alive = 1;         // 是否可以邀请好友进入\r\n    optional int32 enroll_ret = 2;          // 是否SNG报名成功, 0: 失败，1：成功\r\n    optional int32 game_type = 3;           // 游戏类型，0：普通桌子，1：sng, 2: mtt, 3: ddz, 4.omaha, 5:multi-sng\r\n    optional int32 game_category = 7;       // 大厅游戏:HALL = 1  私局:PERSONAL = 2\r\n}\r\n\r\n//用户退出牌桌\r\nmessage GameExitDeskReq {\r\n    optional int32 deskid=1; // desk id\r\n}\r\nmessage GameExitDeskRsp {\r\n    optional int64 gold=1;\r\n    optional int64 win=2;\r\n    optional int64 lose=3;\r\n    optional int32 is_contest_over=4;       // sng赛事是否结束，0：否，1：是，如果赛事结束了再退桌的，要弹出结算信息\r\n}\r\n\r\n// 跟注\r\nmessage GameFollowBetReq {\r\n    optional int64 chips = 1;\r\n    optional int32 timeout = 2;     // 是否是超时自动操作，0:否，1：是\r\n}\r\nmessage GameFollowBetRsp {\r\n}\r\n\r\n// 弃牌\r\nmessage GameUserGiveUpReq {\r\n    optional int32 timeout = 1;     // 是否是超时自动操作，0:否，1：是\r\n}\r\nmessage GameUserGiveUpRsp {\r\n}\r\n\r\n// 站起\r\nmessage GameUserStandUpReq {\r\n}\r\nmessage GameUserStandUpRsp {\r\n    optional int32 reason = 1;      // 1:本手牌结束后站起\r\n}\r\n\r\n// cmd: 170, 坐到指定位置\r\nmessage GameUserSitDownReq {\r\n    optional int32 seat_id = 1;                 // 座位号: 从0开始\r\n    optional int64 carry_chips = 2;             // 携带筹码\r\n    optional GPSInfo gps = 3;                   // gps信息\r\n}\r\nmessage GameUserSitDownRsp {}\r\n\r\n// 牌桌内用户金币兑换筹码\r\nmessage GameUserExchangeChipsReq {\r\n    optional int64 exchange_chips =1;       // 要兑换的筹码\r\n    optional int32 action = 2;              // 0：老版本逻辑（自动补充）；1：只补充下局(未勾选)；2：自动补充设置的筹码(已勾选)\r\n    optional int32 immediately = 3;         // 立即兑换，0：否，1：立即兑换并坐下\r\n    optional int32 seat_id = 4;             // 座位号: 从0开始，不是指定座位坐下不要填写该字段，留空即可\r\n    optional GPSInfo gps = 5;\r\n    optional int32 tokens_state = 7;        // 0: 非tokens 桌  1：tokens桌发起交易 2: tokens桌合约完成后兑换筹码\r\n}\r\n\r\nmessage GameUserExchangeChipsRsp {\r\n    optional int32 exchanged = 1;              // 筹码兑换是否已生效，0：下局生效；1：立即生效\r\n    optional int64 total_buyin_chips = 2;       // 历史上总的买入筹码数\r\n   \r\n}\r\n\r\n\r\n// cmd = 10029  \r\nmessage GameBuyInChipsNtf{\r\n  optional int32 reason = 1;                    //买入失败错误码 1桌上筹码大于X，则不补充该玩家桌上筹码 3 钱包余额小于于需买入筹码：则不补充该玩家桌上筹码\r\n  optional int64 total_buyin_chips = 2;        // 总共买入的筹码数\r\n  optional int64 current_chips = 3;            // 当前筹码数\r\n  optional int64 wallet_balance = 4;           // 钱包余额\r\n  optional int64 result_chips = 5;             // 结果买入的筹码\r\n}\r\n\r\n// cmd: 25097, 玩家合约完成交易通知\r\nmessage ContractBuyinNtf {\r\n    optional int32 op_uin = 1;              // 玩家uin\r\n    optional int64 to_exchange_chips = 2;   // 合约完成交易 待兑换的筹码(玩家身上的筹码)\r\n    optional int32 next_status = 3;         // 0: 本手生效 1: 下局生效\r\n}\r\n// cmd: 25098 25099 25100 25101 25102 取消玩家合约交易\r\nmessage RejectContractBuyin {\r\n\r\n}\r\n// cmd: 25103 25104 25105 25106 25107\r\nmessage ReqContractBuyinStatus {\r\n    optional int32 op_type = 1;             // 1: 请求transaction_tx  2: 更新transaction_tx\r\n    optional string transaction_tx = 2;     // 当前订单交易唯一id\r\n}\r\n\r\n/* =============*/\r\n// 服务器push\r\n\r\n\r\nmessage TotalChipsDetailInfo {\r\n    optional int64 chips =1;\r\n    repeated int32 users =2[packed=true];\r\n}\r\nmessage DeskPlayInfo {\r\n    repeated int32 cards =1[packed=true];\r\n    optional int32 max_cards_formation=2;       // 牌型\r\n    optional int64 min_bet=3;                   // 如果正好轮到的是我，那么能下注的最小值\r\n    optional int64 max_bet=4;                   // 如果正好轮到我，那么能下注的\r\n    optional int64 dft_improve_bet=5;           // 默认加注\r\n    optional int64 chips = 6;\r\n    optional int64 round_chips=7;\r\n    optional int32 show_cards = 8;              // 是否设置亮牌了，0：不亮牌；1：亮牌\r\n    optional int64 round_bet_chips = 9;         // 前一个玩家下了多少注\r\n    optional int32 status = 10;                 // 玩家状态\r\n    optional int32 occupy_time = 11;            // 占位剩余时间\r\n    optional int32 occupy_status = 12;          // 占位状态，0:没占位；1:占位将在本轮结束生效；2:已经占位\r\n    optional int32 call_time_using = 13;        // 是否正在使用call_time  0：否， 1：是\r\n    optional string openid = 14;                // 玩家openid\r\n    optional int32 call_time_count = 15;        // 当前使用延时次数\r\n    optional int32 card_amount = 16;            // 房卡数量\r\n    optional int32 is_novice = 17;              // 是否是新手（0： 否  1：是）\r\n    optional int32 can_add_chips = 18;          // 能不能加注\r\n    optional int64 max_round_chips_delt = 19;   // 本圈的最大加注差额\r\n    optional int32 shortcut = 20;               // 快捷操作类型值, -1:没有快捷操作权, 0: 有快捷操作权，但没有选中任何快捷操作, 1:看或弃, 2:自动跟, 3:自动看\r\n    repeated int32 max_hand_cards = 21[packed=true];        // 最大手牌\r\n    repeated int32 max_share_cards = 22[packed=true];       // 最大公共牌\r\n    optional int32 cards_formation = 23;       // 手牌牌型(叫马哈专用)\r\n    optional int64 one_pot_amount = 24;        // 1pot的筹码数\r\n    optional int32 total_call_time_count = 25;      // 当前牌桌内使用延时的总次数\r\n    optional int32 dp_time_using = 26;          // 是否正在使用disconnect protection  0：否， 1：是\r\n    optional int32 current_hand_count = 27;     // 在本桌玩牌手数\r\n    optional int32 current_vpip_count = 28;     // 在本桌入池手数\r\n    optional DispatchCardInfo dispatch_card_info = 29;    // 发牌的解密信息\r\n    repeated BeforeOpenInfo before_open_info_list = 30;   // 翻牌前的玩家操作\r\n}\r\n\r\n// 翻牌前的玩家操作 op为空则未操作 见定义 TEXAS_PLAY_ACTION_BET\r\nmessage BeforeOpenInfo {\r\n    optional int32 uin = 1;\r\n    optional string action = 2;\r\n}\r\n\r\nmessage Operations {\r\n    optional int32 uin = 1;\r\n    repeated int32 ops = 2;  // 1 弃牌, 2 跟注, 4 加注, 8 看牌, 16 全押, 32 比牌\r\n}\r\n\r\nmessage GPSInfo {\r\n        optional string gps_lat = 1;             // GPS纬度,如果没有获取到，填写空字符串\r\n        optional string gps_long = 2;            // GPS经度,如果没有获取到，填写空字符串\r\n        optional string gps_addr = 3;            // GPS地址,城市省份具体位置\r\n}\r\n\r\nmessage NeedExchangeCard{\r\n    optional int32 card = 1;                           // 需要换的牌\r\n    optional int32 index = 2;                          // 牌的索引\r\n}\r\n\r\n// 游戏游客登陆\r\nmessage GuestLoginReq {\r\n    optional string uuid  = 1;       // App生成并缓存在本地\r\n    optional string res_md5 = 2;      // 1\r\n    optional string channel = 3;      // channel\r\n    optional int32 version = 4;       // version\r\n\toptional string lang = 5;       // language\r\n}\r\n\r\nmessage GuestLoginRsp {\r\n    optional int32 uin = 1;                            // user id\r\n    optional int32 error_code = 2;\r\n    optional PatchUpdate patch_update = 3;             // 热更新\r\n    repeated ErrorCodeInfo error_list = 4;             // error list\r\n    optional int32 user_type = 5;                      // 用户类型（0：自然人，1：公司 2:游客）\r\n\trepeated ErrorCodeInfo msg_list = 6;                // message list\r\n}\r\n\r\n// 游戏游客进桌请求接口\r\nmessage GuestEnterDeskReq {\r\n    optional string uuid  = 1;       // App生成并缓存在本地\r\n    optional int32 desk_id = 2;     //牌桌id\r\n    optional int32 event_id  = 3;   //赛事id\r\n    optional int32 view_openid = 4; // 赛事 指定被旁观者的openid\r\n}\r\n\r\n//游客进桌请求回复\r\nmessage GuestEnterDeskRsp {\r\n    optional int32 uin = 1;                            // user id\r\n    optional int32 game_type = 2;                      // 游戏类型（0:标准局 1:SNG类型 2:MTT类型 3:DDZ类型 4:OMAHA类型 5:多桌sng\r\n    optional int32 user_type = 3;                      // 用户类型（0：自然人，1：公司 2:游客）\r\n    \r\n}\r\n\r\n//游客退桌请求\r\nmessage GuestExitDeskReq{\r\n    optional string uuid = 1;\r\n    optional int32 desk_id = 2;     //牌桌id\r\n}\r\n\r\n//游客退桌回复\r\nmessage GuestExitDeskRsp{\r\n    optional int32 uin = 1;                            // user id\r\n    optional int32 desk_id = 2;     //牌桌id\r\n    optional int32 error_code = 3;\r\n}\r\n\r\n//1031 6013 6803 11003 12003 13003  EvtDeskUserEnterReq  EvtDeskUserEnter 这是切后台的\r\nmessage RefreshDeskReq {\r\n    optional int32 desk_id = 1;     //牌桌id\r\n}\r\n//1020\r\nmessage EvtDeskUserEnter {\r\n    optional int32 deskid=1; // desk id\r\n    optional int32 roomid=2; // roomid\r\n    optional int32 op_uin=3; // op uin\r\n    optional int32 status=4 ; // status\r\n    optional int32 dealer=5; // dealer uin\r\n    optional int32 player_op_past_time=6; // 临到的那个人已经过去的时间\r\n    repeated GameUserInfo users =7; // users list\r\n    optional int32 next_uin=8;// next user id\r\n    optional int64 total_chips=9;\r\n    repeated TotalChipsDetailInfo total_chips_detail=10;\r\n    optional DeskPlayInfo play_info = 11;\r\n    repeated int32 share_cards =12[packed=true]; //公共牌\r\n    optional int32 dealer_seatid=13;            // dealer的座位号\r\n    optional int64 gold = 17;                   // 玩家总金币，主要为了解决玩家站起后切换到后台金币变化没更新\r\n    optional CustomMade cm_data = 18;           // 私人订制数据\r\n    optional int32 jackpot_status = 19;         // jackpot 的状态 0为不支持，1支持\r\n    optional int64 jackpot = 20;                // jackpot 大小\r\n    optional int64 total_buyin_chips = 21;      // 历史上在这个桌子兑换的筹码累加\r\n    optional int32 buyin_limit_multi = 22;      // 本桌买入筹码限制倍数\r\n    optional string invite_code = 23;           // 邀请码\r\n    optional string round_id = 26;              // 牌桌uuid，用于标识一个牌桌, 从牌桌创建到牌桌释放的整个生命周期\r\n    optional int32 action_code = 27;            // 动作码，玩家进桌后提示，等于0时不用提示，大于0时用这个数值去error_code里面取文案\r\n    optional int32 op_time = 28;                // 默认的玩家操作等待时间\r\n    optional int32 group_id = 29;               // 圈子id(即俱乐部id)\r\n    optional int64 desk_chips = 30;             // 进桌玩家在桌子里面的筹码\r\n    optional int32 carry_min_multi = 31;        // 最小携带倍数\r\n    optional int32 carry_max_multi = 32;        // 最大携带倍数\r\n    optional int32 seat_limit = 33;             // 几人桌\r\n    optional int32 is_call_time = 34;           // 是否支持call time: 目前的每个桌子都支持call_time. 该返回值为1\r\n    optional int32 call_time = 35;              // 系统当前采用的call_time时间: [20, 60]\r\n    optional int32 insurance = 36;              // 是否支持保险，0:否，1:是\r\n    optional int32 insurance_applied = 37;      // 是否已经有人接保险了，0:否，1:是\r\n    optional int32 pool_valid = 38;             // 保险池是否有效，0:否，1:是\r\n    optional int32 total_call_time = 39;        // 操作玩家当前剩余的总操作时间，当前op_time定时器的时间(只给到进桌玩家)\r\n    optional int32 op_active = 40;              // 是否有操作权\r\n    optional int32 straddle_delayed = 41;       // 1:游戏还没真正开始，在等待抢straddle; 0: 游戏已经真正开始了\r\n    optional int64 previous_bet = 42;           // 前注注额多少\r\n    optional int32 need_buyin_authority = 43;         // 是否开启授权带入   0:否 1:是\r\n    optional int32 need_protocolpool = 44;            // 是否支持协议分池   0:否 1:是\r\n    optional int32 need_multiplecard = 45;            // 是否支持多次发牌   0:否 1:是\r\n    optional int32 reverse_show_cards_order = 46;           // 是否翻转开手牌和公共牌的顺序, 1: 先翻开手牌再翻公共牌; 0: 先翻公共牌再翻手牌\r\n    optional int32 left_time = 47;                          // 标准局：牌局剩余时间   SNG:报名剩余时间\r\n    repeated MultiShareCard multi_share_cards = 48;         // 多次牌的公共牌\r\n    optional int32 settle_status = 49;                      // 牌局的结算状态 0:未进入结算，1：协议分池的结算阶段； 2：多次发牌的结算阶段 3：正常结算（或者有保险的结算）阶段\r\n    optional int32 need_enter_authority = 50;               // 是否开启授权进入   0:否 1:是\r\n    optional int32 immediate_effect = 51;                   //（此属性房主暂停牌局时有效）房主暂停牌局时的是否立即生效 0：否， 1：是\r\n    optional bytes fingerprint = 52;                        // 校验码\r\n    optional string group_name = 53;                        // 俱乐部名称\r\n    optional int32 confirm_fold_flag = 54;                  // 玩家弃牌后，是否需要二次弹框(发送给进桌人) （1： 是， 0： 否）\r\n    optional int32 must_straddle = 55;                      // 是否开启强制strallde （1： 是， 0： 否）\r\n    optional int32 hands_index = 56;                        // 牌局中当前的最大手数（发送给进桌人更新）\r\n    optional int32 collect_count = 57;                      //当前收藏的数量（发送给进桌人更新）\r\n    optional int32 collect_limit = 58;                      //最大收藏限制(发送给进桌人更新）\r\n    optional int32 key_type = 59;                           // 开房类型，0：金币；1：房卡 3：钻石\r\n    optional int32 is_started = 60;                         // 游戏是否已开始，0：未开始；1：已经开始\r\n\r\n    message SNG {\r\n        optional SNGBlindLevel level = 1;\r\n        optional int32 contest_status = 2;      // 比赛状态 0未开始比赛，1开始比赛\r\n        optional int32 blind_raise_time = 3;    // 距离下一次升盲还剩多少时间\r\n        optional int32 entry_cost_type = 4;      // 指定报名的消耗类型     （0：无消耗 1.消耗金币 2.消耗钻石 3.消耗门票, 4.消耗房卡, 5.金币或门票）---目前只有消耗金币\r\n        optional SNGBlindLevel current_level = 5; //当前盲注级别 处理一手牌未结束 但盲注变化 引起的盲目错误\r\n    }\r\n\r\n    optional SNG sng = 61;                      // SNG 专用\r\n    optional int32 game_type = 62;              // 游戏类型 0：标准局， 1: SNG  2.MTT, (3.DDZ)  4: Omaha  5.Multi_SNG \r\n    optional int32 need_enrollment= 63;         // 是否开启玩家报名 0：否  1：是\r\n    optional int32 seated_num = 64;              // 在座位上的玩家数量\r\n    optional int32 novice_join_type = 65;        //新手入局方式 (发送给进桌人更新) 0：新手盲方式入局游戏(默认方式)  1：‘等待大盲’方式入局\r\n\r\n    message MTT {\r\n        optional MTTBlindLevel level = 1;\r\n        optional MTTContestResult result = 2;   // 进桌也给个排名\r\n        optional int32 contest_status = 3;      // 比赛状态 0未开始比赛，1开始比赛\r\n        optional int32 time_remain = 4;         // 秒数, 还有多久开赛\r\n        optional bool is_final_table = 5;       // 是否决赛桌\r\n        optional int32 event_id = 6;            // 赛事ID\r\n        optional int32 remain_rebuy_times = 7;          // 剩余重购次数\r\n        optional int32 remain_addon_times = 8;          // 剩余增购次数\r\n        optional bool in_the_money = 9;                 // 是否再钱圈内\r\n        optional int64 extra_chips = 10;                // 重/增购后还没生效的筹码\r\n        optional int32 time_for_raise_blind = 11;       // 距离下一次升盲还剩多少时间\r\n        optional MTTRoomConf mtt_conf = 12;             // mtt赛事配置\r\n        optional int32 desk_num = 13;                   // 当前桌子号码\r\n        optional int32 rebuy_addon_status = 14;         // 1:重购中 2:增购中\r\n        optional int32 rebuy_addon_remain_time = 15;    // 等待点击重购增购剩余时间, 点击之后等待授权重购增购剩余时间\r\n        optional int32 rest_remain_time = 16;           // 已废弃 -- 中场休息剩余时间(只给进桌人自己更新）\r\n        optional int32 lose_rebuy_addon = 17;           // 1:用户不可重构增购\r\n        optional int32 rank_wait = 18;                  // 是否等待排名，等待排名是不会立刻弹出结算框，要客户端设置提示语，1：等待排名；0：立刻输掉了不需要等待\r\n        optional int32 rank = 19;                       // 实时名次,进桌玩家自己的\r\n        optional string event_uuid = 20;                // 赛事uuid\r\n        optional MTTBlindLevel current_level = 21;      // //当前盲注级别 处理一手牌未结束 但盲注变化 引起的盲目错误\r\n        optional string user_reg_ticket_no = 22;        // 用户报名赛事时所用的门票号, 未使用门票报名时为空\r\n        optional int32 break_time_status = 23;          // 0 非休息阶段 1 等待休息中 2 休息中\r\n        optional int32 break_time_remain = 24;          // 剩余休息时间\r\n\t\toptional int32 mdt_id = 25;//多天赛有值\r\n\t\toptional int32 can_cancel_rebuy = 26;//是否可以取消rebuy\r\n        optional bool is_team_competition = 27;         // 是否团队赛\r\n        optional MttUserRealTimeData mtt_user_real_time_data = 28;   // 进桌的玩家赛事实时数据\r\n     }\r\n    optional MTT mtt = 66;                              // MTT 专用\r\n    optional int64 pot_chips = 67;                      // 自己在本手牌下注的总额度(只给进桌玩家自己更新)\r\n    optional int32 view_uin = 68;                       // 正在旁观哪个玩家(只给进桌玩家自己更新)\r\n    optional int32 location_limit = 69;                 // GPS和IP限制开关，0：关闭；1：开启\r\n    optional int32 my_hands_count = 70;                 // 一个用户在MTT赛事或一个牌局中参与的所有手数的总数（发送给进桌人更新）\r\n    optional int32 bury_card = 71;                      // 自动埋牌开关(0：关闭 1：开启)\r\n    repeated PlayTag play_tags = 72;                    // 玩牌标签\r\n    optional bool is_global_silent = 73;                // 是否全局沉默模式\r\n    optional int32 author_cost_type= 74;                // 创建者消耗费用类型  （0：无消耗 1.消耗金币 2.消耗钻石 ）\r\n    optional int32 buyin_cost_type = 75;                // 补充记分牌费用类型    （0：无消耗 1.消耗金币）\r\n    optional int64 diamond_amount = 76;                 // 玩家钻石数量，主要为了解决玩家站起后切换到后台钻石变化没更新\r\n    optional string remark_map = 77;                    // 玩家对所有人的备注信息映射表\"{openid: remark, }\"\r\n    optional RoomConf conf = 78;                        // 房间配置\r\n    optional int64 carry_min = 79;                      // 最小带入\r\n    optional int64 carry_max = 80;                      // 最大带入\r\n    optional int32 sb_seatid = 81;                      // 小盲座位号\r\n    optional int32 bb_seatid = 82;                      // 大盲座位号\r\n    optional int32 group_owner = 83;                    // 群主ID\r\n    optional string hand_id = 85;\r\n\t\r\n\tmessage MultiLastShareCard {\r\n\t    repeated MultiCardInfo multi_card_info = 1;         //发多次牌的公共牌\r\n        repeated MultiWinner multi_winners = 2;             //每次牌对应的赢家（与多次牌的公共牌顺序对应）\r\n        repeated UserMultiLCard multi_user_cards = 3;       //发多次牌时的牌型变化\r\n\t    optional int32 total_round_index = 4;         \t\t// 发多次轮数\r\n\t    optional int32 round_index = 5;         \t\t\t// 发多次轮次 \r\n\t\trepeated GameOverResultInfo result = 6;\r\n        optional int32 multi_card_type = 7;                 // 0: 代表比牌 1：代表 发多次牌\r\n\t}\r\n\toptional MultiLastShareCard multi_last_share_card = 86;\r\n    optional int32 player_stats_protection = 87;     //   0表示没开启，1表示开\r\n    optional int32 table_stats_protection    = 88;   //  0表示没开启，1表示开\r\n    optional int32 auto_start_switch = 89;           //  自动开桌开关 {开：1 关：0}\r\n    optional int32 auto_start_number = 90;           //  自动开桌人数\r\n    optional int32 clone_table_switch = 91;          //  克隆桌子开关{开：1 关：0}\r\n    optional string logo_url = 92;                   //  赛事logo\r\n    optional int32 activity_type = 93;               //  活动类型 1 定时抽奖\r\n    optional bytes activity_info = 94;               //  活动信息\r\n    optional int32 jpot_remain = 95;                 //  jackpot奖池，100倍大小，精确到分\r\n    optional int32 user_dp_remain_time = 96;         //  玩家掉线保护剩余总时间\r\n    optional int32 total_call_time_count_max = 97;   //   桌子call time上限\r\n    optional VPIPInfo vpip_info = 99;                //  vpip相关数据\r\n\toptional int32 multi_desk = 101;                   // 桌子类型 0:单桌 1：多桌\r\n    optional int64 betting_limit_valid_value = 102;     // betting limit 当前可下注金额\r\n    optional int64  betting_limit_max_value = 103;     // betting limit 最大下注金额\r\n    optional Web3EnterDeskInfoEvt web3_enter_desk_info = 104;   // web3新增进桌参数\r\n    optional int32 force_show_cards_switch = 105;    // 强制看牌开关\r\n    optional int32 show_rest_cards_switch = 106;     // 看剩余牌开关\r\n    optional int32 game_duration = 107;              // 游戏时长（分钟）\r\n    repeated ClientCardDecryptInfo share_cards_decrypt_info_list = 108;\r\n    optional string poker_style_map = 109;             // 玩家对所有人的玩牌风格\"{openid: poker_stype, }\"\r\n    optional int32 chat_display_mode = 110;            // 聊天显示模式\r\n    optional int32 occupy_reason = 111;                // 被系统设置为强制占位状态的原因 见 ShuffleEncryptTimeOutType\r\n    optional string shuffle_id = 112;                  // 洗牌id\r\n    repeated PlayerProp player_prop = 113;             // 参与保险的玩家的胜率,平率\r\n    optional int32 club_desk_chat = 114;               //俱乐部禁言状态\r\n    optional DeckCardInfo decrypt_user_deck_cards_info = 115;  // 解密人的 在加密阶段完成之后的牌信息 处理玩家在pke阶段未收到pke通知的情况\r\n    optional TokenDeskInfo token_info = 116;\r\n    optional int64 group_point = 117;                // 俱乐部赛事 玩家俱乐部积分\r\n    optional SquidInGameInfo squid_in_game_info = 118;   // 鱿鱼游戏在玩相关信息\r\n    optional int32 is_squid_logout = 119;                // 鱿鱼游戏中 玩家掉线参与牌局标记\r\n    optional int32 custom_over_remain_time = 120;         // 倒计时 结算 剩余时间\r\n    optional string voice_sig = 121;             // 语音Usersig\r\n    optional int32 game_category = 122;                   // 大厅游戏:HALL = 1  私局:PERSONAL = 2\r\n    \r\n}\r\n\r\n//私局审批局 玩家的审批信息\r\nmessage PlayerApproveInfo{\r\n    optional int32 status = 1;         // 审批状态 释义见 宏ApproveStatus\r\n    optional int32 immediately = 2;    // 1 立即买入  2 游戏中的补买入\r\n    optional int32 chips = 3;          // 审批筹码\r\n    optional string apply_msg  = 4; // 赛事审批信息 json字符串\r\n}\r\nmessage Web3EnterDeskInfoEvt {\r\n    optional bool is_personal_game = 1;                             // 是否为私局游戏\r\n    optional bool is_plo_bet_limit = 2;                             // plo相关游戏是否有下注限制\r\n    optional bool is_manager_approval_game = 3;                     // 是否需要房主审批\r\n    optional int32 rake_mode = 4;                                   // 抽水模式\r\n    optional int32 rake_percentage = 5;                             // 抽水比例\r\n    optional string share_link_url = 6;                             // 牌桌分享链接\r\n    optional PlayerApproveInfo enter_player_approve_info = 7;       // 进桌玩家的审批信息\r\n    optional bool is_enter_player_buyin_before = 8;                 // 进桌玩家是否买入过\r\n    optional bool is_already_collected_user_secret_key = 9;         // 是否收集过玩家密钥\r\n    optional int32 shuffle_status = 10;                             // 桌子的洗牌状态\r\n    optional TokenInfo token_info = 11;                             // 代币信息\r\n    optional ExtendDeskInfo extend_info = 12;                       // 创桌扩展信息\r\n    optional bool is_delayed_hand = 13;                             // 是否为延迟看牌功能\r\n    optional bool need_report_cur_user_sk = 14;                     // 当前进桌的玩家是否需要上传密钥\r\n    optional int64 rake_limit = 15;                                 // 抽水上限 具体数字 / 100\r\n}\r\n\r\n\r\nmessage DeskShareLinkReq {\r\n    optional int32 desk_id = 1;                 // 桌子id\r\n    optional string original_share_link = 2;    // 原始分享链接\r\n}\r\n\r\nmessage DeskShareLinkRsp {\r\n    optional string short_share_link = 1;    // 短链接\r\n}\r\nmessage RoomConf {\r\n\r\n    message NormalRoomConf {\r\n        optional int64 carry_base_min = 1;                 // 带入筹码基数\r\n        optional int64 carry_base_max = 2;                 // 带入筹码基数\r\n        optional int64 small_blind = 3;                    // 小盲\r\n        optional int64 big_blind = 4;                      // 大盲\r\n        optional int32 seat_limit = 5;                     // 座位数\r\n        optional float service_rate = 6;                   // 服务费率\r\n        repeated int64 call_time_gold_list = 7;            // calltime 延时消耗金币\r\n        repeated int64 call_time_diamond_list = 8;         // calltime 延时消耗钻石\r\n        optional int64 show_rest_card_gold = 9;            // 查看剩余公共牌 消耗金币\r\n        optional int64 show_rest_card_diamond = 10;        // 查看剩余公共牌 消耗钻石\r\n        optional int64 delay_cost_card = 11;               // 延长牌局时长消耗房卡\r\n        optional int64 delay_cost_diamond = 12;            // 延长牌局时长消耗金币\r\n        \r\n        // 购买牌桌延时时间对应表\r\n        message DeskDelayConf{                             \r\n            optional int32 delay_type = 1;                 //购买延时时长类型\r\n            optional string delay_hours = 2;               //时长类型对应的小时数\r\n            optional int32 multi_small_blind = 3;          //消耗金币的小盲倍数\r\n        }\r\n        repeated DeskDelayConf desk_delay_conf = 13;\r\n        \r\n        // 保险赔率表\r\n        message InsuranceSheet{\r\n            optional int32 outs_num = 1;                    // 危险牌数量\r\n            optional float claim_odds = 2;                  // 如果保险生效，保险可以给到的赔率\r\n            optional int32 game_type = 3;                   // 游戏类型 0：普通桌子 6.omaha\r\n        }\r\n        repeated InsuranceSheet insurance_sheets = 14;\r\n        optional int32 rest_cost_type = 15;                 //查看剩余公共牌消耗类型（根据类型取对应的值）\r\n        optional int64 force_show_player_card_diamond = 16;        // 强制查看其他玩家 消耗钻石\r\n        repeated int64 insurance_delay_diamond_cost_list = 17;         // 保险延时钻石 延时消耗钻石\r\n    }\r\n    \r\n    optional NormalRoomConf normal_room_conf = 1;           // 普通房间配置, 短牌房间配置\r\n    optional NormalRoomConf omaha_room_conf = 2;            // omaha房间配置\r\n    optional SNGRoomConf sng_room_conf = 3;                 // sng房间配置\r\n}\r\n\r\n\r\n\r\n// 通知用户坐下(比如用户自己点击了做下，或者用户点击了自动坐下，等到了可以坐下的时候)\r\nmessage EvtDeskUserSitDown {\r\n    optional int32 deskid=1; // desk id\r\n    optional int32 roomid=2; // room id\r\n    optional int32 op_uin=3; // op uin\r\n    repeated GameUserInfo users=4; // users\r\n    optional int32 next_uin=5; // next user id\r\n    optional int64 player_op_past_time =6; //\r\n    optional DeskPlayInfo play_info = 7;\r\n    optional int64 total_chips = 8; //\r\n    repeated TotalChipsDetailInfo total_chips_detail = 10;\r\n    optional int32 settle_status = 11;                 //牌局的结算状态 0:未进入结算，1：协议分池的结算阶段； 2：多次发牌的结算阶段 3：正常结算（或者有保险的结算）阶段\r\n    optional bytes fingerprint = 12;                   // 校验码 \r\n    optional CustomMade cm_data = 13;                  // 私人订制房间数据\r\n    optional int32 dealer=16;             // 大菠萝dealer uin\r\n    optional int32 dealer_seatid=17;          // 大菠萝dealer seatid\r\n    optional int64 fantasy_player_op_past_time = 18; //\r\n    optional int32 novice_join_type = 19;\r\n}\r\n\r\n// 通知用户站起(比如用户自己点击了站起，或者服务器触发了站起)\r\n// cmd 137\r\nmessage EvtDeskUserStandUp {\r\n    optional int32 deskid=1;\r\n    optional int32 roomid=2;\r\n    optional int32 dealer=3;\r\n    optional int32 op_uin=4;\r\n    optional int32 next_uin=5;\r\n    optional int64 total_chips = 6;\r\n    repeated TotalChipsDetailInfo total_chips_detail =7;\r\n    optional DeskPlayInfo play_info =8;\r\n    repeated GameUserInfo users=9;\r\n    optional bool lack_money = 10;      // 给客户端用来判断弹框\r\n    optional int32 dealer_seatid=11;    // dealer的座位号\r\n    optional int32 reason = 13;         // 站起原因，0：默认，1：筹码不足，需要补充筹码 5:mtt输了 6:mtt等待rebuy 7:mtt等待addon 8: 手数限制\r\n    optional int32 settle_status = 14;  //牌局的结算状态 0:未进入结算，1：协议分池的结算阶段； 2：多次发牌的结算阶段 3：正常结算（或者有保险的结算）阶段\r\n    optional bytes fingerprint = 15;    //校验码\r\n    optional int64 player_op_past_time = 16; //\r\n    optional CustomMade cm_data = 17;   // 私人订制房间数据\r\n    optional int64 fantasy_player_op_past_time = 19;\r\n    optional int32 discard_count = 20;               // 弃牌堆数量\r\n    optional int32 assign_count = 21;                // 发牌堆数量\r\n    optional int32 rebuy_revive = 22;     // mtt 剩余rebuy时间\r\n\toptional int32 can_cancel_rebuy = 23;     // 能否取消rebuy\r\n    optional int64 group_point = 24;       // 俱乐部赛事 俱乐部积分\r\n}\r\n\r\n//玩家牌桌打牌中的标签\r\nmessage PlayTag {\r\n    optional int32 uin =1;              // 玩家\r\n    optional int32 tag_type =2;         // 标签类型 （1.新手盲 2.straddle标签 3.埋牌标签 4.摊牌标签 5.亮牌标签, 6.弃牌标签, 7.跟注 8.加注 9.all-in 10. check, 11.下注）\r\n}\r\n\r\n\r\n// 游戏开始, 小盲大盲会自动下注\r\nmessage EvtGameStart {\r\n    optional int32 deskid =1; // deskid\r\n    optional int32 dealer =2; // dealer id\r\n    optional int32 next_uin =3; // next_uin\r\n    repeated GameUserInfo users = 4;\r\n    optional DeskPlayInfo play_info =5;\r\n    optional int32 roomid = 7;\r\n    optional int64 total_chips = 8;         // 传一下total chips\r\n    optional int32 status=9;                // 牌桌状态\r\n    optional int32 dealer_seatid=10;        // dealer的座位号\r\n    optional int32 must_spend = 17;             // 是否是必下桌，0：否；1：是\r\n    optional int64 jackpot = 18;                // jackpot 大小\r\n    optional int64 total_buyin_chips = 19;      // 总的买入筹码累加\r\n    optional int64 previous_bet = 20;           // 前注注额\r\n    optional int32 sb_seatid = 22;              // 小盲座位号\r\n    optional int32 bb_seatid = 23;              // 大盲座位号\r\n    optional int32 call_time = 24;              // 个人的call time 时间\r\n    optional bytes fingerprint = 26;            // 校验码\r\n    message SNG {                           // SNG 专用\r\n        optional SNGBlindLevel level = 1;\r\n        optional int32 blind_raise_time = 2;        // 距离下一次升盲还剩多少时间\r\n        optional SNGBlindLevel current_level = 3;   // 当前盲注级别 处理一手牌未结束 但盲注变化 引起的盲目错误\r\n    }\r\n    optional SNG sng = 27;\r\n\r\n    message MTT {                           // MTT 专用\r\n        optional MTTBlindLevel level = 1;\r\n        optional int32 contest_status = 2;                 // 赛事状态\r\n        optional MTTContestResult result = 3;\r\n        optional bool in_the_money = 4;                    // 是否进入钱圈\r\n        optional bool is_final_table = 5;                  // 是否决赛桌\r\n        optional int32 time_for_raise_blind = 6;           // 距离下一次升盲还剩多少时间\r\n        optional MTTBlindLevel current_level = 7;           //当前盲注级别 处理一手牌未结束 但盲注变化 引起的盲目错误\r\n        repeated int32 raise_blind_ntf_uid_list = 8;  // 需要通知升盲的玩家列表\r\n        optional MttUserRealTimeData mtt_user_real_time_data = 9;       // 每个玩家的赛事实时数据\r\n    }\r\n    optional MTT mtt = 28;\r\n\r\n    message PreviousBet {\r\n        optional int32 uin = 1;\r\n        optional int64 bet = 2;\r\n    }\r\n    repeated PreviousBet previous_bets = 29;    // 每个人下的前注列表，可能有人的筹码不够一个标准前注，所以单独给一份谁下了多少前注\r\n    repeated PlayTag play_tags = 30;            // 玩牌标签\r\n\toptional int64 total_previous_bet = 31;           // 总前注注额\r\n    optional string hand_id= 34;                  // 手牌id\r\n    optional int32 discard_count = 35;               // 弃牌堆数量\r\n    optional int32 assign_count = 36;                // 发牌堆数量\r\n    repeated TotalChipsDetailInfo total_chips_detail = 37; // total chips detail\r\n    optional int64 betting_limit_valid_value = 41;     // betting limit 当前可下注金额\r\n    optional int64  betting_limit_max_value = 42;      // betting limit 最大下注金额\r\n    optional DeckCardInfo decrypt_user_deck_cards_info = 43;  // 解密人的 在加密阶段完成之后的牌信息 处理玩家在pke阶段未收到pke通知的情况\r\n    optional string squid_game_begin_hand_id = 44;            // 鱿鱼游戏触发开始时的这手的hand_id\r\n    optional SquidInGameInfo squid_in_game_info = 45;         // 鱿鱼游戏在玩相关信息\r\n    optional int32 is_squid_logout = 46;                // 鱿鱼游戏中 玩家掉线参与牌局标记\r\n    optional int32 remain_time = 47;                         // 私人定制牌局剩余时间\r\n   \r\n}\r\n\r\n\r\nmessage UserCards {\r\n    optional int32 uin = 1;                     // 用户ID\r\n    repeated int32 cards = 2;                   // 用户手牌\r\n    optional int32 seatid = 3;                  // 座位号\r\n\r\n    message CardsFormation{\r\n        optional int32 share_cards_num = 1;         // 公共牌牌数量\r\n        optional int32 cards_formation = 2;         // 公共牌加手牌的牌型\r\n    }\r\n\r\n    repeated CardsFormation formations = 4;     // 牌型列表\r\n\trepeated ClientCardDecryptInfo card_decrypt_info_list = 5; // 对应cards字段 具体发给玩家的 牌解密信息\r\n    optional int32 decrypt_uin = 6;                           // 解密人的uid\r\n}\r\n\r\n// 派发公共牌 前 玩家allin 胜率显示 CMD_EVENT_BEFORE_OPEN_SHARE_CARDS = 1106\r\nmessage EvtBeforeOpenShareCards {\r\n    repeated PlayerProp player_prop = 1;              // 玩家的胜率,平率\r\n}\r\n\r\n// 派发公共牌，客户端同时应该合并注池\r\nmessage EvtOpenShareCards {\r\n    optional int32 deskid =1; // desk id\r\n    optional int32 roomid=2; // room id\r\n    optional int32 next_uin=3; // next uin\r\n    optional int32 dealer =4; // dealer\r\n    optional int64 total_chips =5; // total chips\r\n    repeated TotalChipsDetailInfo total_chips_detail = 6; // total chips detail\r\n    optional DeskPlayInfo play_info =7; // play info\r\n    repeated int32 share_cards=8[packed=true]; // share cards\r\n    optional int32 dealer_seatid=9;    // dealer的座位号\r\n    optional int32 reverse_show_cards_order = 11;     // 是否翻转开手牌和公共牌的顺序 0/1\r\n    repeated UserCards users = 12;                    // 用户的手牌，只有reverse_show_cards_order为true时有效\r\n    optional int32 risk_result_turn_round = 13;       // 不需要风险控制提示(提示转牌)\r\n    optional int32 risk_result_river_round = 14;      // 不需要风险控制提示(提示河牌)\r\n    optional bytes fingerprint = 15;                  // 校验码\r\n    optional int32 discard_count = 16;                // 弃牌堆数量\r\n    optional int32 assign_count = 17;                 // 发牌堆数量\r\n    repeated PlayerProp player_prop = 18;              // 参与保险的玩家的胜率,平率\r\n    repeated ClientCardDecryptInfo share_cards_decrypt_info_list = 19; // share_cards 字段 解密信息\r\n    optional bool is_already_collected_user_secret_key = 20;         // 是否收集过玩家密钥\r\n    optional DeckCardInfo decrypt_user_deck_cards_info = 21;  // 解密人的 在加密阶段完成之后的牌信息 处理玩家在pke阶段未收到pke通知的情况\r\n    optional InsuranceHitInfo insurance_hit_info = 22;\r\n}\r\n\r\n// 用户弃牌\r\nmessage EvtUserGiveUp {\r\n    optional int32 deskid =1; //desk id\r\n    optional int32 op_uin =2; // op_uin\r\n    optional int32 next_uin=3; // next user id\r\n    optional int64 total_chips=4; // total chips\r\n    repeated TotalChipsDetailInfo total_chips_detail =5;\r\n    optional DeskPlayInfo play_info=6; // play info\r\n    optional int32 roomid = 7;\r\n    message GiveUpInfo {\r\n        optional int32 uin = 1;\r\n        optional int64 gold = 2;\r\n        optional int64 chips = 3;\r\n        optional int32 status = 4;\r\n        optional int32 call_time_using = 5;      //弃牌后，call_time_using置位\r\n        optional int32 is_server_op = 6;        // 是否是服务器操作的 1: 是 0: 否\r\n        optional int32 dp_time_using = 7;      //弃牌后 掉线保护状态\r\n    }\r\n    optional GiveUpInfo op_user = 8;\r\n    optional bytes fingerprint = 10;            // 校验码\r\n    optional int32 discard_count = 11;               // 弃牌堆数量\r\n    optional int32 assign_count = 12;                // 发牌堆数量\r\n}\r\n\r\n// 用户退出\r\nmessage EvtUserExit {\r\n    optional int32 deskid =1; //desk id\r\n    optional int32 dealer =2; // dealer id\r\n    message ExitOpInfo {\r\n        optional int32 uin=1;\r\n        optional int64 gold=2;\r\n        optional int64 chips=3;\r\n        optional int64 round_chips=4;\r\n        optional int64 bet_chips=5;\r\n        optional int32 status=6;\r\n        optional bool auto_play = 7;                        // 是否是托管状态\r\n    }\r\n    optional ExitOpInfo op_user =3;\r\n    optional int32 next_uin =4;\r\n    optional int64 total_chips =5;                          // 因为用户弃牌会导致底注增加，站起也是这样\r\n    repeated TotalChipsDetailInfo total_chips_detail =6;\r\n    optional DeskPlayInfo play_info=7;\r\n    optional int64 player_op_past_time=8;\r\n    optional int32 roomid =9;\r\n    optional int32 dealer_seatid=10;                        // dealer的座位号\r\n    optional int32 reason = 12;                             // 退桌原因\r\n    optional string prompt = 13;                            // 退桌提示语\r\n    optional int32 settle_status = 14;                      //牌局的结算状态 0:未进入结算，1：协议分池的结算阶段； 2：多次发牌的结算阶段 3：正常结算（或者有保险的结算）阶段\r\n    optional bytes fingerprint = 15;                        //校验码\r\n    optional int32 seated_num = 16;                         //当前在座位上的玩家数量\r\n    optional CustomMade cm_data = 17;                       // 私人订制数据\r\n    optional int64 fantasy_player_op_past_time=18;\r\n    optional int32 discard_count = 19;               // 弃牌堆数量\r\n    optional int32 assign_count = 20;                // 发牌堆数量\r\n    optional MultiLangMsg multi_lang_msg = 21;\r\n}\r\n\r\nmessage FollowBetOpInfo {\r\n    optional int32 uin=1;\r\n    optional int64 gold=2;\r\n    optional int64 chips=3;                                 //下注之后，用户拥有的筹码\r\n    optional int64 round_chips=4;                           //自己在本轮总下注的额度\r\n    optional int64 bet_chips=5;\r\n    optional int32 status=6;                                //用户之后的状态\r\n    optional int32 bet_type=7;                              //0 跟注 1 加注 2 allin 3 比牌 4.下注\r\n    optional int32 call_time_using = 8;                     //跟注后call_time_using置位     \r\n    optional int64 pot_chips = 9;                           // 自己在本手牌下注的总额度\r\n    optional int32 is_server_op = 10;                       // 是否是服务器操作的 1: 是 0: 否\r\n    optional int32 dp_time_using = 11;            // 是否正在使用掉线保护 , 0:否， 1:是\r\n}\r\n\r\n// 跟注\r\nmessage EvtUserFollowBet {\r\n    optional int32 deskid=1;\r\n    optional FollowBetOpInfo op_user=2;\r\n    optional int64 total_chips = 3;\r\n    repeated TotalChipsDetailInfo total_chips_detail =4;\r\n    optional int32 next_uin=5;\r\n    optional DeskPlayInfo play_info=6;\r\n    optional int32 roomid=7;\r\n    optional bytes fingerprint = 9;     // 校验码\r\n    optional bool is_global_silent = 10;    // 是否全局沉默模式\r\n    optional int64 betting_limit_valid_value = 11;     // betting limit 当前可下注金额\r\n    optional int64  betting_limit_max_value = 12;     // betting limit 最大下注金额\r\n}\r\n\r\nmessage UserInsuranceDelayReq{\r\n    optional string order_id = 1;        //订单ID\r\n    optional int32 delay_type = 2;//延时类型 1(正常触发风控后领先玩家的操作延时)  2(当领先玩家选择多次牌，落后玩家的选择是否同意时的操作延时)\r\n}\r\n\r\n// 342 广播玩家请求保险延时\r\nmessage UserInsuranceDelayNtf{\r\n    optional string order_id = 1;        //订单ID\r\n    optional int32 left_time = 2;       //当前剩余多少时间\r\n    optional int32 left_count = 3;      //当前还剩几次购买时间\r\n    optional int32 delay_type = 4;      //延时类型\r\n}\r\n\r\nmessage MultiCard{\r\n    repeated int32 max_cards= 1[packed=true];      //发多次牌时，每次牌的最大牌\r\n    optional int32 max_cards_formation =2;         //发多次牌时，每次牌的牌型\r\n    repeated int32 max_hand_cards = 3[packed=true];     //omaha发多次牌时，最大手牌\r\n    repeated int32 max_share_cards = 4[packed=true];    //omaha发多次牌时，最大公共牌\r\n}\r\n\r\nmessage MultiWinner{                              //发多次牌的赢家\r\n    repeated int32 winners =1[packed=true];         \r\n}\r\n\r\nmessage MultiCardInfo{                            //多次牌时，发出的公共牌\r\n    repeated MultiWinProb multi_win_prob =1;\r\n    message MultiWinProb{\r\n        optional int32 share_card = 2;\r\n        repeated PlayerProp player_prop = 3;              // 参与保险的玩家的胜率,平率\r\n    }\r\n    repeated PlayerProp opened_player_prop = 4;           // 每次多次牌之间，已有的公共牌胜率会发生变化\r\n}\r\n\r\n//多次牌时，发出的公共牌\r\nmessage MultiShareCard {\r\n    repeated int32 share_card = 1 [packed = true];\r\n}\r\n\r\nmessage GameUserInfo {\r\n    optional int32 status=1;\r\n    optional int64 gold=2;\r\n    optional int64 chips=3;\r\n    optional int32 uin=4;\r\n    optional string nick=5;\r\n    optional int32 seatid=6;\r\n    optional int32 sex=7;\r\n    repeated int32 cards = 8[packed=true];         //\r\n    repeated int32 max_cards= 9[packed=true];      //正常发牌的最大牌\r\n    optional int32 max_cards_formation =10;        //正常发牌的牌型\r\n    optional int64 round_chips = 11;\r\n    optional bool checked = 14;                     // 是否已看牌\r\n    optional string portrait = 18;                  // 头像url\r\n    optional int32 is_master = 19;                  // 角色, 0:普通玩家；1:桌子创建人\r\n    repeated MultiCard multi_cards = 20;            // 发多次牌的最大牌，以及牌型\r\n    optional int32 occupy_time = 21;                // 占位剩余时间\r\n    optional int32 occupy_status = 22;              // 占位状态，0:没占位；1:占位将在本轮结束生效；2:已经占位\r\n    optional int32 call_time_using = 23;            // 是否正在使用call_time , 0:否， 1:是\r\n    optional string openid = 24;                    // 玩家openid\r\n    optional int32 call_time_count = 25;            //当前使用延时次数\r\n    optional bool auto_play = 26;                   // 是否是托管状态\r\n    optional bool in_desk = 27;                     // 是否在桌子内\r\n    optional int32 game_rank = 28;                  // sng排名\r\n    optional int32 is_novice = 29;                  // 是否是新手（0：否  1是）\r\n    optional int32 size_blind = 30;                 // 0.其它 1.小盲 2.大盲 \r\n    optional string flag_icon = 31;                  // 国旗url\r\n    optional int32 cards_formation =32;             //手牌的牌型（叫马哈专用）\r\n    optional int32 total_call_time_count = 33;      // 当前牌桌内使用延时的总次数\r\n    optional string verification_info = 34;         // 头像认证信息\r\n    optional int32 hunted_values = 35;              // 猎人赛玩家赏金\r\n    optional int32 dp_time_using = 36;            // 是否正在使用掉线保护 , 0:否， 1:是\r\n    optional int32 waiting_remain_time = 37;        // 占位剩余时长，单位秒\r\n    optional int32 max_waiting_time = 38;           // 最大占位时间\r\n    optional string team_icon= 39;                  // 团队图标url\r\n    optional string nfts = 41;                      // ntfs头像\r\n    optional string nfts_addr = 42;                 // ntfs头像地址\r\n    optional int32 occupy_reason = 43;              // 占位原因\r\n    optional int32 prepare_status = 44;             // 预备状态  0:null  1:STAND_UP 2:EXIT_DESK  3:SIT_OUT\r\n}\r\n\r\n\r\n\r\n//新版保险赔付列表\r\nmessage InsuranceSettle{\r\n    optional int32 uin = 1;                     // 谁买了保险\r\n    optional int64 payoff = 2;                  // 获得保险，正数是赢得了保险（输了牌）; 负数是输了保险(赢了牌)\r\n    optional int64 revenue = 3;                 // 保险抽水\r\n    optional int64 premium = 4;                 // 投保额\r\n    optional int64 pot = 5;                     // 保险底池\r\n    repeated int32 behind_player_winner_uins = 6; // 保险触发后 参与保险底池的落后玩家 反超赢了牌的 玩家列表\r\n}\r\n\r\nmessage GameOverResultInfo {\r\n    optional int64 chips=1;\r\n    message GameOverSettleInfo {\r\n        optional int32 uin =1;\r\n        optional int64 chips=2;\r\n    }\r\n    repeated GameOverSettleInfo settle=2;\r\n    optional int32 contributor_num = 3;            // 贡献这堆底池的玩家数\r\n}\r\n\r\n// 游戏结束通知\r\nmessage EvtGameOver {\r\n    repeated int32 winners=1[packed=true]; // winners\r\n    repeated GameUserInfo users=2;\r\n    repeated GameOverResultInfo result = 3;\r\n    optional int32 next_uin =4;\r\n    optional int32 deskid =5;\r\n    optional int32 roomid =6;\r\n    optional DeskPlayInfo play_info = 7;\r\n    optional int32 remain_time = 8;                         // 私人定制牌局剩余时间\r\n   \r\n    message NetProfit{                                      //净利润\r\n        optional int32 uin = 1;                             // 玩家uin\r\n        optional int64 chips = 2;                           // 玩家本局游戏的净利润，正数是盈利，负数是亏损，赢家的净利润（盈利）=总收益-本金，输家的净利润= 本局的投入（取负数）\r\n    }\r\n    repeated NetProfit net_profits = 10;                    // 玩家的净利润\r\n    repeated MultiCardInfo multi_share_cards = 11;          //发多次牌的公共牌\r\n    repeated MultiWinner multi_winners = 12;                //每次牌对应的赢家（与多次牌的公共牌顺序对应）\r\n    optional int32 risk_type = 13;                          //风控类型（0：无保险， 1：协议分池 2：多次发牌 3：正常保险 4.直接发牌）\r\n    optional int32 settle_status = 14;                      //牌局的结算状态 0:未进入结算，1：协议分池的结算阶段； 2：多次发牌的结算阶段 3：正常结算（或者有保险的结算）阶段\r\n    optional int32 show_rest_cards = 15;                    //查看剩余公共牌按钮 （0： 不显示， 1显示)\r\n    optional int64 show_rest_cards_cost = 16;               //查看剩余公共牌需要消耗金币值\r\n    repeated UserCards multi_user_cards = 17;               //发多次牌时的牌型变化\r\n    optional int32 dealer_seatid = 18;                      // dealer的座位号\r\n\r\n    message MTT {\r\n        optional MTTContestResult result = 1;\r\n        optional int32 contest_status = 2;\r\n    }\r\n    optional MTT mtt = 19;                                  // mtt\r\n    optional int32 status = 20;                             // 游戏的状态（牌桌的状态）\r\n    repeated PlayTag play_tags = 21;                        // 玩牌标签\r\n    repeated InsuranceSettle insurance_settle_list = 22;    // 所有人的赔付列表\r\n    repeated PlayTag draw_hand_play_tags = 23;              // 手牌比牌的标签(叫马哈专用)\r\n    repeated GameOverResultInfo draw_hand_result = 24;      // 比较手牌的分筹码情况\r\n    repeated int32 draw_hand_winners = 25 [packed=true];    // 手牌winners\r\n    message JPUserInfo {\r\n        optional int32 uin = 1;         // 获得奖励的玩家uid\r\n        optional string nick = 2;       // 昵称\r\n        optional int32 card_type = 3;   // 牌型\r\n        repeated int32 cards = 4;       // 获得奖励的牌面\r\n        optional int32 reward = 5;      // 获得的奖金(单位是分), 如果这个字段为0，说明没有开启jp，不需要给奖励动画\r\n    }\r\n    repeated JPUserInfo jp_reward_users = 27;                       // 大牌击中列表\r\n    repeated JPUserInfo cooler_reward_users = 28;                   // cooler击中列表\r\n    optional JPUserInfo max_cards_user = 29;                        // 最大牌的玩家(摊牌玩家中, reward字段忽略\r\n    optional int32 jpot_remain = 30;                                // jp奖池，100倍大小，也就是精确到分\r\n    optional int32 force_show_player_cards = 31;                    //强制查看其他玩家牌按钮 （0： 不显示， 1显示)\r\n    optional int64 force_show_player_cards_cost = 32;               //强制查看其他玩家牌需要消耗钻石\r\n}\r\n\r\n\r\n// 获取阶段统计数据\r\nmessage PeriodData {\r\n    optional int32 uin = 1;\r\n    optional string nick = 2;\r\n    optional int32 sex = 3;\r\n    optional int64 exchange_chips_sit = 4;          // 兑换的筹码\r\n    optional int64 win_chips_sit = 5;               // 输赢筹码\r\n    optional int32 win_times = 6;               // 赢次数\r\n    optional int32 play_times = 7;              // 玩牌次数\r\n    optional string portrait=9;                 // 头像url\r\n    optional int32 status=10;                  // 状态，0：不在桌子里面；1:在桌子里面\r\n    optional int32 just_view=11;               // 只是旁观的从来没玩过牌的玩家, 0否，1是\r\n    optional int32 is_insurance=12;            // 是否是保险数据，0:否，1:是\r\n    optional string openid=13;                  // 玩家openid\r\n    optional int32 rank=14;                     // 排行\r\n    optional int64 remain_chips=15;             // 剩余筹码\r\n    optional string flag_icon=16;                  // 国旗url\r\n    optional string win_max_nickname = 17;      // 赢TA最多 昵称\r\n    optional int64 win_max_chips = 18;          // 赢TA最多 筹码值\r\n    optional string lose_max_nickname = 19;      // 输TA最多 昵称\r\n    optional int64 lose_max_chips = 20;          // 输TA最多 筹码值\r\n}\r\n\r\n// cmd: 5012 6831 6084 6831 12031 13031 5509 查看实时战绩\r\nmessage PeriodStatReq {\r\n    optional string uuid = 1;                   // 数据校验和\r\n    optional int32 desk_id = 2;         // 创建好的桌子id\r\n\r\n}\r\n\r\n// cmd: 5112, 通知实时战绩更新,同时也是5012的响应\r\nmessage PeriodStatRsp {\r\n    repeated PeriodData data_list = 1;\r\n    optional int32 remain_time = 2;             // 私人定制房间的剩余时间\r\n    optional int32 round_count = 3;             // 总手数\r\n    optional int32 average_time = 4;            // 每手平均时间，单位秒\r\n    optional int64 average_pot_chips = 5;       // 平均底池\r\n    optional string uuid = 6;                   // 数据校验和\r\n    optional int64 insurance = 8;               // 保险情况\r\n    optional bool is_creator = 9;      // 是否是房主\r\n}\r\n\r\n// cmd: 5509 sng实时战绩\r\nmessage SNGPeriodStatReq{\r\n    \r\n}\r\n\r\nmessage SNGPeriodStatRsp {\r\n    message SNGPeriodData {\r\n        optional int32 rank = 1;                     // 排行\r\n        optional string nick = 2;                    // 昵称\r\n        optional int64 remain_chips = 3;             // 记分牌\r\n        optional int64 kill_num = 4;                 // 人头数\r\n        optional int32 uin = 5;                      // uin\r\n        optional int32 bb_num = 6;                   // 大盲数\r\n        optional string openid = 7;                  // 玩家openid\r\n        optional int32 sex = 8;                      // 玩家性别\r\n    }\r\n    repeated SNGPeriodData desk_data_list = 1;            // 桌子内战绩列表信息\r\n    optional int32 round_count = 2;                   // 总手数\r\n    optional int32 average_time = 3;                  // 每手平均时间，单位秒\r\n    repeated ViewerList viewer_list = 4;              // 旁观玩家列表\r\n    optional int64 average_left_chips = 5;            // 平均筹码量(当前剩余玩家的总筹码量/剩余玩家数)\r\n    optional int32 signed_up_player_num = 6;          // 报名参赛人数\r\n    optional int32 playing_player_num = 7;            // 在比赛的人数\r\n}\r\n\r\n// cmd: 1203 sng赛事信息\r\nmessage SNGDeskInfoReq {\r\n}\r\n\r\nmessage SNGDeskInfoRsp {\r\n    optional string name = 1;                       // 牌局名称\r\n    optional int32 playing_player_num = 2;          // 在比赛的人数\r\n    optional int32 signed_up_player_num = 3;        // 报名参赛人数\r\n    optional int64 entry_fee = 4;                   // 报名费\r\n    optional int64 server_fee = 5;                  // 服务费\r\n    optional int64 init_chips = 6;                  // 初始记分牌\r\n    optional int32 raise_interval = 7;              // 升盲时长, 单位秒\r\n    optional int32 desk_num = 8;                    // 当前牌桌号\r\n    optional int32 desk_player_number = 9;          // 单桌人数\r\n    optional int32 pass_time = 10;                  // 比赛已进行时长,单位秒\r\n    optional int64 total_pool = 11;                // 总奖池\r\n    optional int32 winners_num = 12;                // 钱圈人数\r\n    repeated RankConfList rank_list = 13;           // 奖励配置\r\n    optional int32 cur_desk_num = 14;               // 当前桌子数量\r\n    optional int32 restrict_gps_ip= 15;             // GPS和IP限制开启 0否， 1是\r\n    optional string event_desc = 16;                // 赛事简介\r\n    \r\n}\r\n\r\n// CMD = 5030\r\nmessage NtfClientCommand {\r\n    optional string command = 1;    // 命令字符串\r\n}\r\n\r\n// cmd: 141, 拉取用户设定的筹码兑换配置\r\nmessage PullChipsExchangeCfgReq{\r\n}\r\nmessage PullChipsExchangeCfgRsp{\r\n    optional int64 chips = 1;                   // 设定好的筹码数量，0：未设置，>0：设置好的兑换筹码数量\r\n    optional int32 action = 2;                  // 设置好的动作：0：未设置，1：只兑换一次；2：持续兑换\r\n    \r\n    optional int32 hands_cur = 3;               // 玩家在周期内的手数\r\n    optional int32 hands_set = 4;               // 玩家设置的 周期内能玩牌手数 (0: 未设置)\r\n    optional int32 hands_period = 5;            // 自我保护 手数计算的周期 单位天(0: 未设置)\r\n    optional string hands_begin_time = 6;       // 手数计算开始时间('':未设置)\r\n    \r\n    optional int32 small_blind_set = 8;         // 玩家设置的小盲上限 单位金币(0: 未设置)\r\n    optional TokenDeskInfo token_info = 9;      // 代币桌相关信息\r\n}\r\n\r\n// cmd 15025 ~15030\r\nmessage QueryVerifyInfoReq{\r\n    optional int64 desk_id = 1;\r\n    optional int64 uid = 2;\r\n\r\n}\r\nmessage QueryVerifyInfoRsp{\r\n    optional bool need_verify = 1;\r\n    optional bool can_input = 2;\r\n}\r\n\r\n// 15020 15021 15022 15023 15024 检测密码桌密码\r\nmessage VerificationCodeCheckReq{\r\n    optional int64 desk_id = 1;\r\n    optional int64 uid = 2;\r\n    optional int32 code = 3;\r\n}\r\n\r\nmessage VerificationCodeCheckRsp{\r\n}\r\n\r\n\r\n// cmd: 1120, 请求亮牌\r\nmessage ShowCardsReq{\r\n    optional int32 card1 = 1;\r\n    optional int32 card2 = 2;\r\n    optional int32 max_card_type = 3;\r\n    optional int32 card3 = 4;\r\n    optional int32 card4 = 5;\r\n    optional int32 card5 = 6;\r\n    optional int32 card6 = 7;\r\n}\r\nmessage ShowCardsRsp{\r\n}\r\n\r\n// cmd: 1122, 亮牌广播，每个人都可以收到\r\nmessage ShowCardsEvt{\r\n    message UserCards{\r\n        optional int32 uin = 1;\r\n        repeated int32 cards = 2;\r\n        optional int32 max_card_type = 3;\r\n        optional int32 hand_card_type = 4;    // 叫马哈手牌牌型\r\n    }\r\n    repeated UserCards user_cards = 1;\r\n}\r\n\r\n// 用户在别处登录\r\n// CMD_EVENT_USER_LOGIN_ELSEWHERE = 10200\r\nmessage EventUserLoginElsewhere {\r\n    optional int32 uid = 1;    // 被踢的UID\r\n}\r\n\r\n// cmd: 501, 私人定制房间的剩余时间提醒\r\nmessage CountDownPromptEvt {\r\n    optional int32 remain_time = 1;             // 牌局剩余时间\r\n    optional string text = 2;                   // 提示文案\r\n}\r\n\r\nmessage RecordOperation{\r\n    optional string operation = 1;\r\n    optional int64 chips = 2;\r\n}\r\n\r\nmessage PerPlayRecord {\r\n    optional string round_id = 1;           // 牌局ID\r\n    optional int32 uin = 2;                 // \r\n    optional string nick = 3;               //\r\n    optional int32 sex = 4;                 //\r\n    optional string portrait = 5;           //\r\n    optional int32 status = 6;              // 状态 0正常, 1弃牌, 256中途站起, 512中途退桌\r\n    repeated int32 hold_cards = 7;          // 手牌\r\n    optional int64 win_chips = 8;           // 筹码变化\r\n    optional int32 desk_id = 9;             // 桌子ID\r\n    optional int32 room_id = 10;            // 场次ID\r\n    optional string group_name = 11;        // 场次名称\r\n    optional int32 play_num = 12;           // 有多少人玩\r\n    optional int32 seat_limit = 13;         // 能坐多少人\r\n    optional int64 small_blind = 14;        // 小盲\r\n    optional int64 big_blind = 15;          // 大盲\r\n    optional int32 timestamp = 16;          // 牌局时间\r\n    repeated int32 max_cards = 17;          // 最大牌\r\n    repeated int32 share_cards = 18;        // 公共牌\r\n    optional bool is_dealer = 19;           // 是否是Dealer\r\n    optional int64 must_spend = 20;         // 必下 or 前注\r\n    optional int32 max_cards_formation = 21;            // 牌型\r\n    repeated int32 show_cards = 22;                     //亮出的牌(没打到底的人的亮牌在此给出，打到底的人的手牌即亮牌，在手牌中给出)\r\n    optional int64 insurance_num = 23;                  //保险的输赢   个人的\r\n    optional int64 chips = 24;                          //玩家在牌局的净输赢\r\n    repeated MultiShareCard multi_share_cards = 25;     //多次发牌中给出的多次公共牌\r\n    optional string openid = 26;                        // 玩家的openid\r\n    optional int32 tag_type = 27;                       // 标签类型（回顾中会只会出现标签中的： 3.埋牌，4.摊牌，5.亮牌, 6.弃牌）\r\n    optional string flag_icon = 28;                        // 玩家的国旗url\r\n    optional int32 hand_cards_max_formation = 29;       // 手牌最大牌型\r\n    optional int64 hand_cards_round_win_chips = 30;     // 本轮手牌净输赢\r\n    optional int64 comb_cards_round_win_chips = 31;     // 本轮组合牌净输赢\r\n    optional string team_icon = 32;                     // 团队图标\r\n    repeated RecordOperation operations = 33;           // 每一轮操作\r\n    optional string role = 34;                          // 玩家角色\r\n    repeated int32 already_show_cards = 35;       // 玩家已秀出的牌  只有自己才有值\r\n}\r\n\r\n// cmd: 5508[标准局，SNG使用] cmd：6070[MTT使用] // 请求牌局记录列表\r\nmessage MyPlayRecordListReq {\r\n    optional string round_id = 1;               //查询牌局记录的每一手牌局id, 为空时，默认获取最近一局\r\n    optional int32 hands_index = 2;             //查询牌局记录中的第几手，获取指定的第几手牌（300版本开始使用）\r\n    optional int32 hand_type = 3;               //如果是0，hands_index表示本局的手数编号，如果是1，hands_index表示我的手牌编号\r\n    optional int32 desk_id = 4;\r\n\toptional int32 player_uuid = 5; \r\n    optional int32 zoom_id = 6;\r\n}    \r\nmessage MyPlayRecordListRsp {               // \r\n    repeated PerPlayRecord record_list = 1;\r\n    optional int64 insurance_num_one = 2;       // 本轮的保险总额\r\n    repeated string round_id_list = 3;          // 本局中到当前为止已结束的每手记录id\r\n    optional int32 op_uin = 4;                  //当前获取牌局记录的人员\r\n    repeated int32 rest_cards = 5;              //剩余公共牌(op_uin玩家查看了则填充)\r\n    optional int32 is_collected = 6;            //当前获取牌局记录的人员是否收藏过这手牌 1：是  0：否\r\n    optional int32 hands_index = 7;             //当前获取的记录属于牌局的第几手\r\n    optional string hand_id = 8;                // 本手牌的唯一标识\r\n    optional int32 risk_deal = 9;              // 是否发生了风险控制（客户端是否需要请求保险详情 0否 1是）\r\n    optional bool is_show_share_cards_btn = 12;     // 是否展示看公牌按钮\r\n    optional bool is_show_player_cards_btn = 13;    // 是否展示强制看牌按钮\r\n    optional int32 show_player_cards_cost = 14;  // 强制看牌消耗钻石\r\n    optional int32 show_share_cards_cost = 15;   // 看剩余牌消耗钻石\r\n    optional string hand_details = 16;           // json形式 手牌详情\r\n    optional bool has_cancel_risk_record = 17;   // 是否有取消保险的记录\r\n    optional int64 hand_total_chips = 18;       // 每手总底池\r\n}\r\n\r\n// 牌友圈用户注册\r\nmessage PYQUserRegReq {\r\n    optional string sign = 1;         // 签名 md5(secret|openid|access_token)\r\n    optional string openid = 2;       // uid\r\n    optional string access_token = 3; // authtoken\r\n    optional string expire_date = 4;  // 过期时间\r\n    optional string channel = 5;      // channel\r\n    optional int32 version = 6;       // version\r\n    optional string os = 7;           // 系统\r\n    optional string lang = 8;         // language\r\n    optional string res_md5 = 9;\r\n    optional int32 game_type = 10;    // 用户主动行为触发的游戏类型\r\n    optional int32 miniapp_dst_desk_id = 11;    // tg mini app 目标桌子id  有值则说明是从mini app跳转过来进桌的\r\n}\r\n\r\n// 根据uin来查openid\r\nmessage QueryOpenIDByUinReq {\r\n    optional int32 uin = 1;\r\n}\r\n\r\nmessage QueryOpenIDByUinRsp {\r\n    optional int32 uin = 1;\r\n    optional string openid = 2;\r\n}\r\n\r\n// cmd: 306, 玩家解散桌子\r\nmessage UserDisbankDeskReq{\r\n}\r\nmessage UserDisbankDeskRsp{\r\n}\r\n\r\n\r\n\r\n// cmd: 310, 发送互动表情\r\n// cmd: 398, MTT发送互动表情\r\nmessage InteractiveExpressionReq{\r\n    optional int32 to_uin = 1;              // 发给谁\r\n    optional int32 expression_id = 2;       // 表情ID\r\n    optional int32 desk_id=3;\r\n}\r\n\r\nmessage InteractiveExpressionRsp{\r\n}\r\n\r\n// cmd: 311, 广播给谁发了互动表情\r\nmessage InteractiveExpressionNtf{\r\n    optional int32 from_uin = 1;            // 谁发的\r\n    optional int32 to_uin = 2;              // 发给谁\r\n    optional int32 expression_id = 3;       // 表情ID\r\n    optional string nick = 4;       // 发送者昵称\r\n    optional string from_openid = 5;        // 发送者openid\r\n}\r\n\r\n// cmd: 312, 把牌局相关的人的openid发给服务器\r\n// cmd: 399, MTT把牌局相关的人的openid发给服务器\r\nmessage PyqRelativeOpenidReq{\r\n    optional string openid_list = 1;                // ID列表，以英文都好隔开 111,222,333\r\n}\r\nmessage PyqRelativeOpenidRsp{\r\n}\r\n\r\n\r\n// cmd: 313, 客户端通知服务器立即开始游戏\r\nmessage ClientNotifyStartGameReq{\r\n}\r\nmessage ClientNotifyStartGameRsp{\r\n}\r\n\r\n\r\n// cmd: 315, 玩家请求使用call time\r\n// cmd: 6066, MTT玩家请求使用call time\r\nmessage UserUseCallTimeReq{\r\n    // 使用call time时，轮到自己操作的剩余时间还有多少,以客户端为准\r\n    optional int32 remain_time = 1;\r\n    optional int32 buy_type = 2;  //买入类型 1 金币 2 钻石\r\n}\r\n\r\nmessage UserUseCallTimeRsp{\r\n}\r\n\r\n// cmd: 316, 广播给所有人，某人使用了call time，剩余时间是多少\r\nmessage UserUseCallTimeEvt{\r\n    optional int32 uin = 1;             // 谁使用了call time\r\n    optional int32 last_time = 2;       // 总的剩余时长，定时器剩余时间＋call time时间\r\n    optional int32 call_time_count = 3;     //当前使用延时次数\r\n    optional int32 total_call_time_count = 4;      // 当前牌桌内使用延时的总次数\r\n}\r\n\r\n// cmd: 317, 通知客户端更新call time时间\r\nmessage UserCallTimeNtf{\r\n    optional int32 call_time = 1;       // call time时间\r\n}\r\n\r\n//cmd: 336 通知落后玩家 领先玩家发起保险请求\r\nmessage UserDivide_multicardNtf{\r\n    optional int32 type = 1;                            // 保险类型 1:协议分池  2:多次发牌\r\n    optional int32 divide_count = 2;                     // 分池比例  100%   举例  70  就是 自己拿70%  如果不是分池 该值为0\r\n    optional int32 multicard_count = 3;                   // 发几次牌   如果不是多次发牌 该值为0 (------- 新的保险协议需要的字段 -------)\r\n    optional int32 ahead_uin = 4;                        //领先玩家的uid (------- 新的保险协议需要的字段 -------)\r\n    optional int32 timer = 5;                            //可操作的时间 (------- 新的保险协议需要的字段 -------)\r\n    optional int64 pool_gold = 6;                        //总的奖池\r\n    optional string order_id = 7;                         //订单ID\r\n    repeated int64 pot_gold = 8;                         //按比列分成2个筹码堆后的最终筹码数据, [50, 30]第一堆给领先玩家，第二堆落后玩家\r\n    optional int32 behind_uin = 9;                        //落后玩家uin(协议分池时的落后玩家) (------- 新的保险协议需要的字段 -------)\r\n    optional int32 enable_confirm_multicard=10;           //多次发牌时，落后玩加是否需要有确认弹框(0: 多次发牌不需要落后玩加确认， 1：多次发牌需要落后玩家确认)\r\n    optional string ahead_nick = 11;                     // 领先玩家昵称\r\n    optional string behind_nick = 12;                    // 落后玩家昵称\r\n}\r\n\r\n//cmd:337  落后玩家 是否同意保险(OMAHA CMD:6855)\r\nmessage UserAgreeDivide_multicardReq{\r\n    optional string order_id = 1;                         //订单ID\r\n    optional int32 type = 2;                             //保险类型 1:协议分池  2.多次发牌（多次发牌不需要落后玩家同意）\r\n    optional int32 is_agree = 3 ;                        //是否同意，0：否；1：是 ( ------ 新的保险协议需要的字段 ------)\r\n}\r\n\r\n//338 通知领先玩家 落后玩家是否同意保险\r\nmessage UserAgreeDivide_multicardNtf{\r\n    optional string order_id = 1;                         //订单ID\r\n    optional int32 type = 2;                             //保险类型 1:协议分池  2:多次发牌\r\n    optional int32 is_agree = 3 ;                        //是否同意，0：否；1：是 ( ------ 新的保险协议需要的字段 ------)\r\n    optional int32 divide_count = 4;                     // 领先玩家下发的的比例\r\n    optional int32 left_time = 5;                        //保险剩余时间 (------ 新的保险协议需要的字段 ------)\r\n}\r\n\r\n//339 买保险玩家通知当前正在买哪种类型的保险(OMAHA CMD:6842)\r\nmessage UserInsuranceTypeReq{\r\n    optional int32 type = 1;           //保险类型  1:协议分池  2:多次发牌 3:正常保险\r\n    optional string order_id = 2;\r\n    optional int32 client_timeout = 3;   //标记客户端超时（在直接发牌的时候用到）。0：未超时情况下的选择 1 超时情况下的选择 \r\n}\r\n\r\n// 340 广播玩家正在选择哪种保险\r\nmessage UserInsuranceTypeNtf{\r\n    optional int32  type = 1;           //保险类型  1:协议分池  2:多次发牌 3:正常保险\r\n    optional string order_id = 2;\r\n}\r\n\r\n\r\n// 345 广播当前不需要购买保险\r\nmessage NoNeedToBuyInsuranceNtf{\r\n    optional int32 type = 1;            //不需要通知类型  1:当前没有outs  2:有多个领先玩家\r\n}\r\n\r\n\r\n// cmd: 348, 单独通知筹码堆信息\r\nmessage TotalChipsDetailNtf{\r\n    repeated TotalChipsDetailInfo total_chips_detail = 1;\r\n}\r\n\r\n// cmd: 349, 同步风控期间的定时器时间\r\nmessage AsyncBuyInsuranceTime{\r\n    optional int32 left_time = 1;                // 剩余可以购买保险的时间\r\n}\r\n\r\n//cmd：350，广播服务端牌局桌子数据重置完成\r\nmessage DeskResetNtf{\r\n\r\n}\r\n\r\n//cmd: 351 6802 11002 12002 13002 查询桌子信息\r\nmessage QueryDeskReq {\r\n    optional int32 desk_id = 1;                  //牌桌\r\n}\r\n\r\n//桌子信息返回\r\nmessage QueryDeskRsp {\r\n    optional CustomMade cm_data = 1;            // 私人订制房间数据\r\n    optional int32 insurance = 2;               // 牌桌是否支持保险,  0:否 1:是\r\n    optional int32 straddle = 3;                // 牌桌是否支持闭眼注,  0:否 1:是\r\n    optional int64 small_blind = 4;             // 小盲\r\n    optional int64 big_blind = 5;               // 大盲\r\n    optional int64 previous_bet = 6;           // 前注注额多少\r\n    optional int64 carry_min =7;                // 最小携带\r\n    optional int64 carry_max = 8;               // 最大携带\r\n    optional int32 need_protocolpool = 9;            // 是否开启协议分池   0:否 1:是\r\n    optional int32 need_multiplecard = 10;            // 是否开启多次发牌   0:否 1:是\r\n    optional int32 need_buyin_authority = 11;        // 是否开启授权带入   0:否 1:是\r\n    optional int32 need_enter_authority = 12;        // 是否开启授权进入   0:否 1:是\r\n    optional int32 player_stats_protection = 13;     //   0表示没开启，1表示开\r\n    optional int32 table_stats_protection    = 14;   //  0表示没开启，1表示开\r\n    repeated int32 manager_uins = 15;                // 管理员列表 根据不同牌局(联盟或俱乐部) 可能是联盟牌局 俱乐部牌局\r\n    optional int32 verification_code = 16;           // 桌子邀请码\r\n   \r\n}\r\n\r\n\r\n//cmd: 355 房主设置房间属性\r\nmessage SettingDeskReq{\r\n    optional int32 carry_min_multi = 1;                // 最小携带倍数\r\n    optional int32 carry_max_multi = 2;                // 最大携带倍数\r\n    optional int32 delay_minute  = 3;                  // 购买延时类型 （类型：1,2,3,4,5,6,7）对应时间（0,0.5,1,2,3,4,5）\r\n    optional int64 buy_gold = 4;                       // 购买消耗金币\r\n    optional int32 cost_card = 5;                       // 购买消耗房卡数量\r\n    optional int32 need_buyin_authority = 11;          // 是否开启授权带入   0:否 1:是\r\n    optional int32 need_enter_authority = 12;          // 是否开启授权进入   0:否 1:是\r\n    optional int32 cost_diamond = 13;                  // 购买消耗钻石的数量\r\n    optional int64 carry_min = 14;                     // 最小带入\r\n    optional int64 carry_max = 15;                     // 最大带入\r\n    optional int32 player_stats_protection = 16;     //   0表示没开启，1表示开\r\n    optional int32 table_stats_protection    = 17;   //  0表示没开启，1表示开\r\n}\r\n\r\n//cmd :356 房间设置通知\r\nmessage SettingDeskNtf{\r\n    optional CustomMade cm_data = 1;            // 私人订制房间数据\r\n    optional int32 insurance = 2;               // 牌桌是否支持保险,  0:否 1:是\r\n    optional int32 straddle = 3;                // 牌桌是否支持闭眼注,  0:否 1:是\r\n    optional int64 small_blind = 4;             // 小盲\r\n    optional int64 big_blind = 5;               // 大盲\r\n    optional int64 previous_bet = 6;           // 前注注额多少\r\n    optional int64 carry_min =7;                // 最小携带\r\n    optional int64 carry_max = 8;               // 最大携带\r\n    optional int32 need_protocolpool = 9;             // 是否开启协议分池   0:否 1:是\r\n    optional int32 need_multiplecard = 10;            // 是否开启多次发牌   0:否 1:是\r\n    optional int32 need_buyin_authority = 11;         // 是否开启授权带入   0:否 1:是\r\n    optional int32 need_enter_authority = 12;         // 是否开启授权进入   0:否 1:是\r\n    optional int32 buy_type = 13;                     // 房主购买的延时类型 （类型：1,2,3,4,5,6,7）对应时间（0,0.5,1,2,3,4,5小时）\r\n    optional int32 disable_close_buyin_authority = 14;  //不允许设置关闭授权带入功能        0：否， 1：是 (房主有未处理的‘申请带入’时，不能关闭该功能，其他情况下都允许)\r\n    optional int32 disable_close_enter_authority = 15;  //不允许设置关闭授权进入功能        0：否， 1：是 (房主有未处理的‘申请进入’时，不能关闭该功能，其他情况下都允许)\r\n    optional int32 carry_min_multi = 16;                // 最小携带倍数\r\n    optional int32 carry_max_multi = 17;                // 最大携带倍数\r\n    optional int32 player_stats_protection = 18;     //   0表示没开启，1表示开\r\n    optional int32 table_stats_protection    = 19;   //  0表示没开启，1表示开\r\n    repeated int32 manager_uins = 20;                // 管理员列表 根据不同牌局(联盟或俱乐部) 可能是联盟牌局 俱乐部牌局\r\n    optional int32 verification_code = 21;       // 邀请码\r\n}\r\n\r\n\r\n//cmd: 359, 服务器风险控制超时通知\r\nmessage RiskControlTimeoutNtf{\r\n}\r\n\r\n\r\n//cmd 360, 补充计分牌信息查询\r\nmessage SupplementChipsInfoReq{\r\n\r\n}\r\n\r\nmessage SupplementChipsInfoRsp{\r\n    optional int64 user_gold = 1;           //玩家当前的金币\r\n    optional int64 user_chips = 2;          //玩家的当前剩余筹码\r\n    optional int64 max_supplement = 3;      //玩家当前可补充的最大值\r\n    optional int32 extra_desc= 4;           //附加说明可补充值最大值情况 ， 默认值为0：可以补充筹码， 1：用户筹码超过最大携带，不能补充筹码  2：用户金币不足，不能补充筹码\r\n    optional int64 last_chips_token = 5;        //玩家上次离开携带的筹码  如果小于最小带入 直接返回0\r\n    optional int32 expire_time= 6;            //玩家上次离开牌桌后到期剩余时间 单位秒  如果小于最小带入 直接返回空\r\n    optional TokenDeskInfo token_info = 7;    // 代币桌相关信息\r\n}\r\n\r\n//cmd 363, 单独广播玩家的状态变化          //目前只用于玩家占位申请带入时，房主同意后进入准备状态\r\nmessage UserStatusChangedNtf{\r\n    optional int32 uin = 1;                //状态发生改变的玩家\r\n    optional int32 status = 2;             //当前状态\r\n}\r\n\r\n//cmd: 508, 请求使用或者取消占位\r\nmessage OccupySeatReq{\r\n    optional int32 action = 1;           // 0: 取消占位；1:占位\r\n}\r\nmessage OccupySeatRsp{\r\n}\r\n\r\n// cmd: 509, 玩家占位通知\r\nmessage OccupySeatNtf{\r\n    optional int32 action = 1;              // 0: 取消占位；1:占位\r\n    optional int32 op_uin = 2;              // 占位的玩家uin\r\n    optional int32 occupy_time = 3;         // 占位剩余时间\r\n    optional int32 status = 4;              // 状态变化，2000:进入占位状态\r\n    optional int32 seat_id = 5;             // 座位ID\r\n    optional int32 reason = 6;              // 原因，0:主动操作；1:记分牌不足被迫占位; 2:长时间无操作被迫占位\r\n    optional int32 occupy_status = 7;       // 占位状态，0:没占位；1:占位将在本轮结束生效；2:已经占位\r\n    optional int32 pause_time = 8;          // 占位前暂停的时间 开局的等待5秒 只在reason=1时需要\r\n    optional int32 novice_join_type = 9;    //入桌模式\r\n}\r\n\r\n// cmd 511\r\nmessage NotifyOtherEventMessage{\r\n    message message_info{\r\n        optional string event_name = 1;\r\n        optional int32 event_fee = 2;\r\n        optional int32 server_fee = 3;\r\n    }\r\n    repeated message_info message_infos = 1;\r\n}\r\n\r\n// cmd: 512 游戏内通用弹窗广播\r\nmessage PopupBroadCastNotifyMessage {\r\n    optional string content = 1;\r\n    optional int32 action = 2;            // 0: 普通弹窗，仅展示. 1: 退出弹窗，点击确认后退出  2: 排队占座通知\r\n    optional int32 reason = 3;            // 如果action为1，那么reason必填\r\n    optional MultiLangMsg multi_lang_msg = 5;\r\n}\r\n\r\n// cmd: 361 请求翻开剩余公共牌\r\n// cmd: 6086 （mtt 请求翻开剩余公共牌）\r\nmessage OpenRestShareCardsReq{\r\n    optional int32 hands_index = 1;\r\n    optional int32 hand_type = 2;               //如果是0，hands_index表示本局的手数编号，如果是1，hands_index表示我的手牌编号 mtt使用\r\n}\r\n\r\n// cmd: 362 请求显示剩余公共牌通知\r\nmessage EvtOpenRestShareCards{\r\n    optional int32 uin = 1;                         // 谁要看剩余公共牌\r\n    message CardsFormation{\r\n        optional int32 share_cards_num = 1;         // 公共牌牌数量\r\n        optional int32 cards_formation = 2;         // 公共牌加手牌的牌型\r\n    }\r\n    message UserCards {\r\n        optional int32 uin = 1;                     // 用户ID\r\n        repeated int32 cards = 2;                   // 用户手牌\r\n        optional int32 seatid = 3;                  // 座位号\r\n        repeated CardsFormation formations = 4;     // 牌型列表\r\n    }\r\n    repeated UserCards user_cards = 2;              // 玩家的牌型信息\r\n    repeated int32 share_cards=3[packed=true];      // share cards\r\n}\r\n// cmd: 5510 请求翻开玩家手牌\r\nmessage ShowPlayerCardsReq{\r\n    required int32 hands_index = 1;\r\n}\r\n// cmd: 5511 请求显示玩家手牌通知\r\nmessage ShowPlayerCardsRsp{\r\n\r\n    message UserCards{\r\n        required int32 uin = 1;\r\n        optional int32 seatid = 2;\r\n        repeated int32 cards = 3;\r\n        required int32 cards_formation = 4;\r\n    }\r\n    repeated UserCards user_cards = 1;\r\n}\r\n\r\nmessage UserChatDisplayModeReq{\r\n    optional int32 mode = 1;\r\n}\r\n\r\n//cmd :364 玩家弃牌后弹出二次弹框次数统计\r\nmessage StatPopConfirmFoldReq{\r\n}\r\n\r\nmessage StatPopConfirmFoldRsp{\r\n    optional int32 confirm_fold_flag = 1;           //返回是否在弃牌后能弹出二次弹框标记 （1：玩家的弃牌操作，需要有二次确认弹框， 0：玩家弃牌，不需要有二次确认弹框）\r\n}\r\n\r\n//cmd :365 收藏某一手牌（收藏牌局回顾中的某一手牌）\r\nmessage HandsCardCollectReq{\r\n    optional int32 hands_index = 1;               //需要收藏的某一手牌的id,牌局回顾中的第几手 \r\n    optional string collect_name = 2;             //收藏名称（预留）\r\n    optional int32 set_collect = 3;               //收藏(1:设置收藏， 0取消收藏)\r\n    optional string hand_id = 4;                    // 每手牌的唯一标识,传了hand_id就不会再使用hands_index来收藏\r\n}\r\n\r\nmessage HandsCardCollectRsp{\r\n    optional int32 collect_count = 1;            //当前收藏的数量（玩家总计收藏数量）\r\n    optional int32 collect_limit = 2;            //最大收藏限制\r\n    optional int32 desk_id = 3;                  //牌桌\r\n    optional int32 hands_index = 4;              //第几手牌（相对desk_id牌桌）\r\n    optional int32 is_collected = 5;             //返回的hands_index牌是否收藏\r\n}\r\n\r\n//cmd :366 牌局当前最新手数通知\r\nmessage DeskHandsIndexNtf{\r\n    optional int32 desk_id = 1;                     //牌桌\r\n    optional int32 hands_index = 2;                 //最新的手数\r\n    optional int32 my_hands_count = 3;              //一个mtt赛事或一场比赛中，一个玩家参与的所有手数的总数\r\n}\r\n\r\n// cmd: 180, 通知玩家道具数量变化\r\nmessage EvtUserPropChange{\r\n    optional int32 prop_type = 1;                   // 资产类型，1:房卡\r\n    optional int64 delta_amount = 2;                // 变更了多少数额\r\n    optional int64 remain_amount = 3;               // 剩余多少数额\r\n}\r\n\r\n// cmd: 367, 玩家点击开始游戏\r\nmessage UserStartGameReq{\r\n}\r\n\r\nmessage UserStartGameRsp{\r\n}\r\n\r\n// cmd: 368 设置新手入局方式\r\nmessage NoviceJoinTypeReq{\r\n    optional int32 novice_join_type = 1;            //新手入局方式 0：新手盲方式入局游戏(默认方式)  1：‘等待大盲’方式入局\r\n}\r\n\r\nmessage NoviceJoinTypeRsp{\r\n    optional int32 novice_join_type = 1;            //新手入局方式 0：新手盲方式入局游戏(默认方式)  1：‘等待大盲’方式入局\r\n}\r\n\r\n//cmd: 370 指定手牌的风险控制详情查询\r\nmessage RiskControlDetailReq{\r\n    optional string round_id = 1;           //标识牌局\r\n    optional string hand_id = 2;            //标识手牌\r\n}\r\n\r\nmessage RiskControlDetailRsp{\r\n    message UserCards {\r\n        optional string openid = 1;                 // 用户ID\r\n        repeated int32 cards = 2;                   // 用户手牌\r\n        optional string nick_name = 3;              // 用户昵称\r\n        optional int32 player_chips_divide = 4;     // 玩家获得的筹码\r\n    }\r\n\r\n    repeated UserCards users = 1;                   // 玩家手牌情况\r\n\r\n    message DividePotSettle{\r\n        optional int32 divide_ratio = 1;              //分池比例\r\n        optional int64 ahead_chips = 2;               //领先玩家的记分牌\r\n        optional int64 behind_chips = 3;              //落后玩家记分牌\r\n    }\r\n\r\n    message MultiCardSettle{\r\n        repeated int32 multi_share_cards = 1;        //每一次发牌的公共牌\r\n        optional int64 ahead_chips = 2;               //每次发牌后领先玩家的记分牌\r\n        optional int64 behind_chips = 3;              //每次发牌后落后玩家记分牌\r\n\r\n    }\r\n\r\n    message InsuranceDetail{\r\n        optional int32 risk_round = 1;\r\n        repeated int32 outs_cards_list = 2;         // 危险牌列表\r\n        repeated int32 equal_outs_list = 3;         // 平分outs列表\r\n        repeated int32 buy_cards = 4;               // 玩家购买的outs\r\n        optional int64 order_gold = 5;              // 玩家投保额度\r\n        optional int64 claim_gold = 6;              // 保险赔付额度\r\n        optional int64 system_back = 7;             // 系统带回投保额度\r\n        repeated int32 system_back_cards = 8;       // 系统带回的outs\r\n        optional int64 back_claim_gold = 9;         // 系统带回赔付额度\r\n        optional int32 is_bomb = 10;                // 是否爆牌（爆牌即买中保险 0:未爆牌  1:爆牌）\r\n        optional int32 bomb_type = 11;              // 爆牌类型（爆牌情况下有效）：0主动购买买中， 1：系统带回买中\r\n        optional int32 action_type = 12;            // 保险发生的操作类型：1.玩家主动购买 2.玩家主动放弃 3.系统超时放弃 4.系统超时强制购买\r\n        optional int64 deduct_gold = 13;            // 扣除保费\r\n        optional string ahead_openid = 14;\r\n        optional string behind_openid = 15;\r\n        optional int64 pool_gold = 16;              // 底池额度\r\n        repeated int32 share_cards = 17;            // 公共牌\r\n        optional int32 risk_type = 18;\r\n    }\r\n\r\n    repeated InsuranceDetail insurance_detail = 2;           // 普通保险详情\r\n    message DivideMultiDetail{\r\n        optional int32 risk_round = 1;\r\n        optional int32 action_type = 2;             //保险发生的操作类型：1.玩家主动购买 2.玩家主动放弃 3.系统超时放弃 4.系统超时强制购买     \r\n        optional string ahead_openid = 3;\r\n        optional string behind_openid = 4;\r\n        optional int64 pool_gold = 5;               // 底池额度\r\n        optional int32 ahead_win_prob = 6;          // 领先玩家的胜率\r\n        optional int32 behind_win_prob = 7;         // 落后玩家的胜率\r\n        repeated int32 share_cards = 8;             // 公共牌 \r\n        optional DividePotSettle divide_settle = 9;\r\n        repeated MultiCardSettle multi_settle = 10;\r\n        optional int32 risk_type = 11;\r\n        optional string win_prob  = 12;              // 胜率\r\n        optional string tie_prob = 13;               // 平率\r\n        optional string odds = 14;                   // 赔率\r\n        optional int32 risk_deal = 15; // 保险是否发生过 0:一手牌未触发风险控制 1:风险控制被触发但是未发生交易(玩家放弃，或者系统超时放弃)2:风险控制被触发，并且发生交易\r\n        \r\n    }\r\n    repeated DivideMultiDetail divide_multi_detail = 3;     // 协议分池或者多次发牌详情 \r\n\t\r\n\tmessage InsuranceDetailNew{\r\n        optional int32 insurance_pot = 1;\r\n        optional string nick = 2;                   // 昵称\r\n        optional string win_prob  = 3;              // 胜率\r\n        optional string tie_prob = 4;               // 平率\r\n        optional string odds = 5;                   // 赔率\r\n        optional int64 premium = 6;                 // 投保\r\n        optional int64 payoff = 7;                  // 赔付\r\n        optional int32 insurance_result = 8;        // 1.赢了游戏 2.输了游戏 3.平了\r\n        optional int64 get_insurance = 9;           // 保险的收益\r\n        optional int32 insurance_revenue = 10;      // 抽水\r\n        optional int32 win_chips = 11;              // 赢的赌注\r\n\t\trepeated int32 share_cards = 12;            // 公共牌\r\n\t\toptional int32 risk_round = 13;\r\n\t\toptional int32 order_type = 14;\r\n\t\toptional int32 risk_type = 15;\r\n        optional int32 ahead_uid = 16;              // 领先玩家uid\r\n        repeated int32 behind_uid_list = 17;        // 落后玩家uid_list\r\n        optional int32 risk_deal = 18; // 保险是否发生过 0:一手牌未触发风险控制 1:风险控制被触发但是未发生交易(玩家放弃，或者系统超时放弃)2:风险控制被触发，并且发生交易\r\n    }\r\n\r\n    repeated  InsuranceDetailNew insurance_detail_new = 4;           // (新)普通保险详情\r\n\r\n}\r\n\r\n// cmd: 372, 房主被移出管理员权限，桌子拥有者变为群主\r\nmessage DeskCreatorChangeNtf{\r\n    optional int32 master_uin = 1;                  // 房主uin\r\n}\r\n\r\n// cmd: 1767, 通知玩家游戏开始\r\nmessage EvtUserStartGame{\r\n    optional int32 is_started = 1;                  // 游戏是否已开始，0：未开始， 1：已开始\r\n    optional CustomMade cm_data = 2;                // 私人订制数据\r\n}\r\n\r\n//cmd: 700, 获取用户列表信息\r\nmessage UserPermsListReq{\r\n}\r\n\r\nmessage UserPermsListRsp{\r\n    repeated UserPermsInfoX user_perms = 1;         // 玩家的权限信息\r\n}\r\n\r\nmessage UserPermsInfoX {\r\n    optional string openid = 1;                    // 用户openid\r\n    optional int32 chat = 2;                       // 是否禁止聊天 0：未禁止，1：已禁止\r\n    optional int32 sit = 3;                        // 是否禁止入座 0：未禁止，1：已禁止\r\n    optional int32 enter = 4;                      // 是否踢出房间 0：未踢出，1：已踢出\r\n    optional string portrait = 5;                  // 头像url\r\n    optional int32 status = 6;                     // 玩家状态 1070: 牌桌外; 1030: 游戏中; 1010: 旁观中\r\n    optional string nick = 7;                      // 玩家昵称\r\n    optional int32 club_desk_chat = 8;             // 俱乐部牌桌的玩家聊天  是否被禁言 0：未禁言，1：已禁言\r\n}\r\n\r\n// 批量修改用户权限信息\r\nmessage BatchEditUserPermsReq {\r\n    message UserPerms {\r\n        optional string openid = 1;                    // 要修改的玩家openid\r\n        optional int32 chat = 2;                       // 是否禁止聊天 0：未禁止，1：已禁止\r\n        optional int32 sit = 3;                        // 是否禁止入座 0：未禁止，1：已禁止\r\n        optional int32 enter = 4;                      // 是否踢出房间 0：未踢出，1：已踢出\r\n        optional int32 club_desk_chat = 5;             // \r\n    }\r\n    repeated UserPerms user_perms_list = 1;\r\n}\r\n\r\n// 批量修改用户权限信息\r\nmessage BatchEditUserPermsRsp {\r\n    message UserPermsUpdateRes {\r\n        optional string openid = 1;                    // 要修改的玩家openi\r\n        optional int32 ret = 2;                        // 修改结果\r\n    }\r\n    repeated UserPermsUpdateRes user_perms_res_list = 1;\r\n}\r\n\r\nmessage UserPermsInfo {\r\n    optional int32 chat = 1;                       // 是否禁止聊天 0：未禁止，1：已禁止\r\n    optional int32 sit = 2;                        // 是否禁止入座 0：未禁止，1：已禁止\r\n    optional int32 enter = 3;                      // 是否踢出房间 0：未踢出，1：已踢出\r\n    optional int32 club_desk_chat = 5;             // 俱乐部牌桌的玩家聊天  是否被禁言 0：未禁言，1：已禁言\r\n}\r\n\r\nmessage EditUserPermsRsp{\r\n}\r\n\r\n//cmd: 702, 获取某个用户权限信息\r\nmessage UserPermsReq{\r\n    optional string openid = 1;                     // 玩家openid\r\n}\r\n\r\nmessage UserPermsRsp{\r\n    optional UserPermsInfo user_perms = 1;         // 玩家权限信息\r\n}\r\n\r\n//cmd: 703\r\nmessage EvtEditUserPerms{\r\n    repeated PermsStatusEdited perm_status = 1;    //被修改的权限的状态\r\n}\r\n\r\nmessage PermsStatusEdited{\r\n    optional string perm = 1;                      // perm:chat, sit, enter\r\n    optional int32 status = 2;                     //0:未禁止, 1:禁止\r\n}\r\n\r\n//cmd: 704\r\nmessage QueryUserDesksReq{\r\n}\r\nmessage QueryUserDesksRsp{\r\n    message Desks{\r\n        optional int32 object_id = 1;    // 桌子id或者赛事id，根据game_type类型判断\r\n        optional int32 game_type = 2;    // game_type\r\n    }\r\n    repeated Desks desks = 1;\r\n}\r\n\r\n// cmd: 705\r\nmessage EmojiBlockSetReq{\r\n    optional int32 target_id = 1;        // 目标玩家的uid\r\n    optional int32 op = 2;               // 操作类型: 0:屏蔽 1:解除屏蔽\r\n}\r\nmessage EmojiBlockSetRsp{\r\n}\r\n\r\n\r\n//------------------------------------SNG 场专用------------------------------------//\r\n// 盲注级别\r\nmessage SNGBlindLevel {\r\n    optional int32 level = 1;                       // 盲注级别\r\n    optional int64 small_blind = 2;                 // 小盲\r\n    optional int64 big_blind = 3;                   // 大盲\r\n}\r\n\r\n// 奖励配置，根据座位数来定\r\nmessage SNGRewardConf {\r\n    optional int32 seat_limit = 1;          // 座位数\r\n    optional int64 first_gold = 2;          // 第一名的奖励金币\r\n    optional int64 second_gold = 3;         // 第二名的奖励金币\r\n    optional int64 third_gold = 4;          // 第三名的奖励金币\r\n}\r\n\r\n// 场次配置\r\nmessage SNGRoomConf {\r\n    optional int32 room_id = 1;                     // 房间ID\r\n    optional int64 entry_fee = 2;                   // 报名费\r\n    optional int64 serve_fee = 3;                   // 服务费\r\n    optional int64 init_chips = 4;                  // 初始筹码\r\n    optional int32 raise_interval = 5;              // 升盲间隔时间,单位秒\r\n    repeated int64 call_time_gold_list = 6;         // 游戏内延时消耗金币数量\r\n    repeated SNGRewardConf reward_list = 7;         // 奖励列表,根据座位数\r\n    optional int32 cost_card = 8;                   // 创建房间消耗房卡\r\n    optional int32 cost_diamond = 9;                // 创建房间消耗钻石\r\n    repeated int64 call_time_diamond_list = 10;     // call time消耗钻石数\r\n}\r\n\r\n// 启动托管状态\r\n// cmd: 1211\r\nmessage SNGStartAutoPlayReq {}\r\n\r\nmessage SNGStartAutoPlayRsp {}\r\n\r\n// 退出托管状态\r\n// cmd: 1206\r\nmessage SNGExitAutoPlayReq {}\r\n\r\nmessage SNGExitAutoPlayRsp {}\r\n\r\n// 通知，进入托管状态（sng）\r\n// cmd: 1207\r\nmessage EvtSNGAutoPlay {\r\n    optional int32 uin = 1;\r\n}\r\n\r\n// 通知，退出托管状态\r\n// cmd: 1208\r\nmessage EvtSNGExitAutoPlay {\r\n    optional int32 uin = 1;\r\n    // 如果操作人是自己，那么返回自己操作定时器的过去时间\r\n    optional int32 player_op_past_time = 2;\r\n}\r\n\r\n// 升盲通知\r\n// cmd: 1202\r\nmessage EvtSNGRaiseBlind {\r\n    optional SNGBlindLevel level = 1;\r\n    optional int32 blind_raise_time = 2;        // 距离下一次升盲还剩多少时间\r\n}\r\n\r\n// cmd: 1205, 赛事结束\r\nmessage EvtSNGContestOver{\r\n    optional int32 reason = 1;              // 赛事结束的原因，1：赛事正常结束；2：赛事被取消了 3:赛事被房主解散\r\n}\r\n\r\n// 创建SNG桌子（内部使用）\r\n//cmd: 20002: web->worker, 20003: woker->logic_server\r\nmessage EvtCreateSNGDesk{\r\n    optional int32 roomid = 1;                   // room id\r\n    optional string name = 2;                    // 私人定制房间名称\r\n    optional int32 discussion_id =3;             // 牌桌来源，讨论组id\r\n    optional int32 group_id = 4;                 // 牌桌来源，圈子id(即目前的俱乐部id)\r\n    optional string dst_openid = 5;              // 聊天的时候跟谁一起创建的牌桌\r\n    optional int32 seat_limit =6;                // 几人桌\r\n    optional string group_name = 7;              // 俱乐部名称\r\n    optional int32 key_type = 8;                 // 开房类型，0：金币；1：房卡\r\n    optional int32 cost_card = 9;                // 消耗房卡数量 \r\n    optional int32 need_enrollment = 10;         // 是否开启玩家报名 0：否  1：是 \r\n    optional int32 dst_desk_id=11;               // 目标deskid，为0则系统自动分配\r\n    optional string openid = 12;                 // 创建者的openid\r\n    optional string req_uuid = 13;               // 请求标识，用于接口内部订阅发布模式返回数据\r\n    optional int32 location_limit = 14;          // 是否启用位置限制,0:否；1:是\r\n    optional int32 cost_diamond = 15;            // 消耗钻石的数量\r\n\toptional int32 alliance_id = 16;             // 联盟id\r\n}\r\n\r\n// --------------------- end of SNG ------------------------------- //\r\n\r\n\r\n// --------------------- begin of MTT ------------------------------- //\r\n\r\n// MTT奖励配置\r\nmessage MTTRewardConf{\r\n    optional int32 rank = 1;                // 排名\r\n    optional int64 gold = 2;                // 奖励金币, 浮动奖励的金币＝总的参赛费x浮动奖励比例\r\n    optional int64 score = 3;               // 奖励竞技分\r\n    optional string float_ratio = 4;        // 浮动奖励比例\r\n    optional int32 coupon_id = 5;           // 兑换券ID, 大于0是有效对兑换券ID\r\n    optional string coupon_name = 6;        // 兑换券名称\r\n    optional int32 ticket_id = 7;           // 门票ID,大于0才是有效对门票ID\r\n    optional string ticket_name = 8;        // 门票名称\r\n    optional int32 ticket_num = 9;          // 门票数量\r\n}\r\n\r\n// MTT排行, 排行奖励根据rank去rank_list里面取\r\nmessage MTTRankInfo{\r\n    optional int32 rank = 1;                // 排名, 从1开始，1是第一名\r\n    optional int32 uin = 2;                 // 玩家uin\r\n    optional string nick = 3;               // 昵称\r\n    optional string portrait = 4;           // 头像url\r\n    optional int32 gender = 5;              // 性别\r\n    optional string col_portrait=6;        // 收集活动头像地址\r\n}\r\n\r\n// MTT盲注级别配置\r\nmessage MTTBlindLevel{\r\n    optional int32 level = 1;                   // 级别ID\r\n    optional int64 small_blind = 2;             // 小盲\r\n    optional int64 big_blind = 3;               // 大盲\r\n    optional int64 must_spend = 4;              // 前注\r\n    optional int32 rebuy = 5;                   // 是否支持rebuy, 0:否；是:大于0且传的值是支持的最大级别\r\n    optional int32 addon = 6;                   // 是否支持addon, 0:否；是:大于0且传的值是支持的最大级别\r\n    optional int32 next_level = 7;                   // 下一级别ID      -1 表示没有下一个盲注了\r\n    optional int64 next_small_blind = 8;             // 下一级别小盲    -1 表示没有下一个盲注了\r\n    optional int64 next_big_blind = 9;               // 下一级别大盲    -1 表示没有下一个盲注了\r\n    optional int64 next_must_spend = 10;             // 下一级别前注    -1 表示没有下一个盲注了\r\n}\r\n\r\n// cmd: 6009, 排名变更通知广播\r\nmessage MTTEventRankChanged {\r\n    message _Inner {\r\n        optional int32 uin = 1;\r\n        optional int32 rank = 2;\r\n        optional int64 total = 3;\r\n    }\r\n    repeated _Inner ranks = 1;\r\n}\r\n\r\n// cmd: 6006\r\n// 重购. 使用固定的配置，客户端发送空包即可\r\nmessage MTTRebuyReq {\r\n    optional int32 desk_id = 1;                // 客户端勿用\r\n    optional int32 req_uuid = 2;               // 客户端勿用\r\n    optional int32 master_uid = 3;             // 客户端勿用\r\n    optional int32 event_id = 4;               // 赛事id\r\n    optional bool can_start = 5;               // 是否可以开始游戏\r\n\r\n}\r\n// 响应的操作通过事件通知决定\r\n\r\n// 会收到一个筹码更改的通知\r\n// 输光后\r\n// rebuy成功后，如果没有拆桌会直接受到一个坐下通知，\r\n// 否则会受到一个并桌消息, 此时客户端主动去做一次进桌请求\r\n// rebuy失败通过返回值决定\r\nmessage MTTRebuyRsp {\r\n    optional int32 remain_rebuy_times = 1;         // 剩余次数\r\n    optional int32 exchanged = 2;                   // 0:下局生效, 1:立即生效\r\n}\r\n\r\n// 取消rebuy请求\r\n// cmd: 6025\r\nmessage MTTCancelRebuyReq {\r\n}\r\n\r\nmessage MTTCancelRebuyRsp {\r\n}\r\n\r\n// cmd: 6007\r\n// 使用固定的配置，客户端发送空包即可\r\nmessage MTTAddOnReq {\r\n    optional int32 desk_id = 1;             // 客户端勿用\r\n    optional int32 req_uuid = 2;             // 客户端勿用\r\n    optional int32 master_uid = 3;             // 客户端勿用\r\n    optional int32 event_id = 4;\r\n}\r\n// 响应的操作通过事件通知决定\r\n\r\n// 会收到一个筹码更改的通知\r\n// 输光后\r\n// add-on成功后，如果没有拆桌会直接受到一个坐下通知，\r\n// 否则会受到一个并桌消息, 此时客户端主动去做一次进桌请求\r\n// add-on失败通过返回值决定\r\nmessage MTTAddOnRsp {\r\n    optional int32 remain_addon_times = 1;         // 剩余次数\r\n    optional int32 exchanged = 2;                   // 0:下局生效, 1:立即生效\r\n}\r\n\r\n// cmd: 6072\r\nmessage MTTRebuyAddonRemainNtf {\r\n    optional int32 remain_rebuy_times = 1;         // 剩余次数\r\n    optional int32 remain_addon_times = 2;         // 剩余次数\r\n    optional int32 transfer_type  = 3;              // 0: reentry 1: addon\r\n    optional int32 exchanged = 4;                   // 0:下局生效, 1:立即生效\r\n    optional int32 ret = 5;                        // 0: 成功 其他: 代表错误码\r\n}\r\n\r\n// 取消重购请求\r\n// cmd: 6026\r\nmessage MTTCancelAddonReq {\r\n}\r\n\r\nmessage MTTCancelAddonRsp {\r\n}\r\n\r\n// 并桌通知\r\n// cmd: 6008 并桌后通知并桌成功的玩家\r\n// cmd: 6064 并桌前通知观战观战玩家\r\nmessage MTTEventMergeDesk {\r\n}\r\n\r\n// 升盲通知\r\n// cmd: 6001\r\nmessage MTTEventRaiseBlind {\r\n    optional MTTBlindLevel level = 1;\r\n    optional int32 time_for_raise_blind = 2;        // 距离下一次升盲还剩多少时间\r\n    optional int32 desk_id = 3;\r\n}\r\n\r\n// 启动托管状态\r\n// cmd: 8001\r\nmessage MTTStartAutoPlayReq {}\r\n\r\nmessage MTTStartAutoPlayRsp {}\r\n\r\n// 退出托管状态, 发送空包即可\r\n// cmd: 6004 12065\r\nmessage MTTExitAutoPlayReq {}\r\n// 通过返回值判断成功与否\r\nmessage MTTExitAutoPlayRsp {}\r\n\r\n// 通知，进入托管状态\r\n// cmd: 6005\r\nmessage MTTEventStartAutoPlay {\r\n    optional int32 uin = 1;\r\n}\r\n\r\n// 通知，退出托管状态\r\n// cmd: 8002\r\nmessage EvtMTTExitAutoPlay {\r\n    optional int32 uin = 1;\r\n    // 如果操作人是自己，那么返回自己操作定时器的过去时间\r\n    optional int32 player_op_past_time = 2;\r\n    optional int32 fantasy_player_op_past_time = 3;\r\n}\r\n\r\n// MTT比赛排名\r\nmessage MTTContestResult {\r\n    optional int32 uin = 1;\r\n    optional int32 rank = 2;                    // 比赛排名\r\n    optional float award = 3;                   // 奖金  奖励金额\r\n    optional int32 master_credit = 4;           // 比赛积分\r\n    optional int32 player_num = 5;              // 玩家数量 赛事总人数\r\n    optional int32 coupon_id = 6;               // 兑换券ID, 大于0是有效对兑换券ID\r\n    optional string coupon_name = 7;            // 兑换券名称\r\n    optional int32 coupon_num = 8;              // 兑换券数量\r\n    optional int32 ticket_id = 9;               // 门票ID,大于0才是有效对门票ID\r\n    optional string ticket_name = 10;           // 门票名称\r\n    optional int32 ticket_num = 11;             // 门票数量\r\n    optional bool is_bubble_reward = 12;        // 是否是泡沫玩家\r\n    optional int32 float_ratio = 13;            // 浮动奖励百分比\r\n    optional int32 float_award = 14;            // 浮动奖励\r\n    optional int32 gender = 15;                 // 性别\r\n    optional int32 share = 16;                  // 是否弹分享框\r\n    optional int32 is_winner = 17;              // 是否钱圈玩家,0：不是钱圈；1：是钱圈\r\n    optional MultiLangMsg multi_lang_msg = 18;  // 多语言信息\r\n    optional int32 reward_type = 19;            // 见MttRewardType\r\n    repeated int32 hand_cards = 20;             // 手牌列表\r\n}\r\n\r\n// cmd: 6010, 赛事状态变更\r\nmessage MTTEventStatusNotify{\r\n    optional int32 event_id = 1;                // 赛事ID\r\n    optional int32 status = 2;                  // 赛事状态\r\n    optional int32 curr_timestamp = 3;          // 把当前时间戳返回下去，供客户端校准\r\n}\r\n\r\n// cmd: 6011, mtt单独的进桌请求\r\nmessage MTTEnterDeskReq{\r\n    optional int32 event_id = 1;                // 赛事ID\r\n    optional int32 just_view = 2;               // 是否旁观进桌\r\n    optional int32 desk_id = 3;                 // 指定桌子id\r\n    optional string view_openid = 4;            // 要到谁的位置上去旁观\r\n    optional string auto_openid = 5;            // 帮谁去进桌(服务器内部使用)\r\n    optional int32 auto_uin = 6;                // 帮谁去进桌(服务器内部使用)\r\n    optional string req_uuid = 7;               // 请求标识，用于接口内部订阅发布模式返回数据\r\n    optional int32 enter_type = 8;              // 进桌类型 0:普通进桌 1:重进/增购进桌 2:旁观玩家换桌\r\n\toptional int32 group_id = 9;                // 进入牌桌来源，圈子id(即目前的俱乐部id)\r\n    optional int32 old_desk_id = 10;            // 旁观玩家换桌时，原牌桌ID，新牌桌进桌失败就会返回原牌桌\r\n    optional int32 last_flow_times = 11;        // 剩余跳转次数(服务器内部使用)\r\n    optional bool can_start = 12;               // 是否可以开始游戏\r\n}\r\nmessage MTTEnterDeskRsp{\r\n    optional int32 game_type = 1;               // 游戏类型，0：普通桌子，1：sng, 2: mtt, 3: ddz, 4.omaha, 5:multi-sng\r\n    optional int32 ori_desk_id = 2;              // 请求进入的桌子\r\n    optional int32 dst_desk_id = 3;              // 实际进入的桌子\r\n    optional int32 player_status = 4;            // 玩家状态\r\n}\r\n\r\n// cmd: 6019\r\nmessage MTTEventMyResult {\r\n    optional int32 event_id = 1;\r\n    optional string event_name = 2;\r\n    optional MTTContestResult result = 3;\r\n    optional int32 is_event_over = 4;           // 1:over\r\n    optional int32 current_reward_number = 5;   // 玩家被淘汰时的钱圈玩家数量\r\n    message UserInfo {\r\n        optional int32 uin = 1;\r\n        optional string nick= 2;\r\n        optional string portrait = 3;\r\n    }\r\n    repeated UserInfo my_kill_list = 6;          // 我的击杀列表\r\n}\r\n\r\n// cmd: 6020, 进场通知\r\nmessage MTTEnterGroundEvt{\r\n    optional int32 event_id = 1;            // 赛事ID\r\n    optional int32 enter_time = 2;          // 进场时距离开赛剩余多少时间，单位秒\r\n    optional string name = 3;               // 赛事名称\r\n}\r\n\r\n// cmd: 6021, 通知赛事被取消\r\nmessage MTTEventCanceledEvt{\r\n    optional int32 event_id = 1;            // 赛事ID\r\n    optional int32 reason = 2;              // 0:因参赛人数不足而取消 1:创建者主动取消\r\n    optional string name = 3;               // 赛事名称\r\n}\r\n\r\n// 服务器内部使用\r\nmessage MTTMergeDeskCheck {\r\n    optional int32 event_id = 1;            // 触发并桌检查\r\n    optional int32 policy = 2;              // 使用什么策略来并桌\r\n    optional int32 desk_id = 3;             // 从哪个桌子触发并桌检测, 即哪个桌子game over进入合并桌检测\r\n}\r\n\r\n// 服务器内部使用\r\nmessage MTTDepartDesk {\r\n    message _Inner {\r\n        optional int32 dst_desk_id = 1;      // 要并哪个桌子\r\n        optional int32 player_num = 2;       // 并多少个人\r\n        optional bool can_start = 3;         // 并入的桌子是否可以开始游戏\r\n    }\r\n    optional int32 srt_desk_id = 1;          // 要拆哪个桌子\r\n    repeated _Inner dest = 2;                //\r\n    optional int32 event_id = 3;             // 赛事id\r\n    optional bool can_start = 4;             // 是否可以开始游戏\r\n}\r\n\r\n// 服务器内部使用\r\nmessage MTTMergeDesks {\r\n    message _Inner {\r\n        optional int32 uin = 1;             // 并进来的用户ID\r\n        optional int64 chips = 2;           // 带了多少筹码\r\n        optional bool in_desk = 3;          // 是不是已经退赛的\r\n        optional bool auto_play = 4;        // 是不是托管状态\r\n        optional bool just_view = 5;        // 是不是旁观玩家\r\n        optional int32 total_call_time_count = 6;   // 使用延时的总次数\r\n    }\r\n    optional int32 desk_id = 1;             // 要并到那个桌\r\n    repeated _Inner players = 2;            // 要合并的玩家\r\n    optional int32 event_id = 3;            // 要合并的玩家\r\n    optional bool can_start = 4;            // 是否可以开始游戏\r\n}\r\n\r\n// 服务器内部使用\r\nmessage MTTGameSettle {\r\n    optional int32 desk_id = 1;             // 比赛结算\r\n}\r\n\r\n// 服务器内部使用\r\nmessage MTTUserLoseWait {\r\n    optional int32 uin = 1;\r\n    optional int32 event_id = 2;\r\n    optional int32 wait_type = 3;           // 1: 等待 rebuy, 2: 等待 addon\r\n}\r\n\r\n// 服务器内部使用\r\nmessage MTTUserLoseWaitEnd {\r\n    optional int32 uin = 1;\r\n    optional int32 event_id = 2;\r\n    optional int32 desk_id = 3;\r\n}\r\n\r\n// 服务器内部使用\r\nmessage MTTSyncStart {\r\n    optional int32 event_id = 1;\r\n}\r\n\r\n// 服务器内部使用\r\nmessage MTTEventDismissDesk {\r\n    optional int32 desk_id = 1;\r\n    optional int32 reason = 2;\r\n}\r\n\r\n\r\n\r\n// cmd: 6028, 通知超时进入游戏，已经被强制退赛退还赛事费用\r\nmessage MTTEventExpiredEvt{\r\n    optional int32 event_id = 1;            // 赛事ID\r\n}\r\n\r\n// cmd: 6030, 赛事状态变更通知\r\n// 仅在游戏无法开局时调用\r\nmessage MTTGameStatusChangedEvt {\r\n    optional int32 contest_status = 1;      // 赛事状态\r\n    optional int32 status = 2;              // 牌局状态\r\n}\r\n\r\n// cmd: 6031, 通知客户端，玩家进行了的操作类型\r\n/*\r\n# 一些操作通知\r\nMTT_USER_OP_LOSE = 1        # 被淘汰了\r\nMTT_USER_OP_MERGE = 2       # 并进来\r\nMTT_USER_OP_JOIN = 3        # 加入\r\nMTT_USER_OP_EXIT = 4        # 退赛\r\nMTT_USER_OP_REVIVE = 5      # 复活\r\nMTT_USER_OP_DEPART = 6      # 并出去\r\nMTT_USER_OP_REBUY = 7       # 重购回来了\r\nMTT_USER_OP_ADDON = 8       # 增购回来了\r\n*/\r\nmessage MTTUserOpNtf {\r\n    optional int32 uin = 1;\r\n    optional string nick = 2;\r\n    optional int32 op = 3;      // 淘汰, 并桌, 加入, 退赛\r\n}\r\n\r\n// cmd: 6032, 清理未进场的玩家,服务器内部使用\r\nmessage MTTDelayEntryCanceledNtf {\r\n    optional int32 event_id = 1;\r\n}\r\n\r\n// cmd: 6033, 通知浮动奖励变化\r\nmessage MTTFloatAwardNtf {\r\n    optional int32 event_id = 1;\r\n    optional int64 float_gold = 2;\r\n}\r\n\r\n// cmd: 6034, 通知进入钱圈状态\r\nmessage MTTEvtInTheMoney {}\r\n\r\n// 有时后会坐下失败，要重做一遍, 服务器内部使用\r\nmessage MTTSitDownFailed {\r\n    optional int32 type = 1;\r\n    optional int32 uin = 2;\r\n    optional int64 chips = 3;\r\n    optional bool in_desk = 4;\r\n    optional bool auto_play = 5;\r\n    optional bool auto_start = 6;\r\n    optional int32 event_id = 7;\r\n    optional int32 desk_id = 8;\r\n    optional int32 redirect_times = 9;      // 统计下同一个消息被重定向了多少次\r\n    message _Inner {\r\n        optional int32 uin = 1;             // 并进来的用户ID\r\n        optional int64 chips = 2;           // 带了多少筹码\r\n        optional bool in_desk = 3;          // 是不是已经退赛的\r\n        optional bool auto_play = 4;        // 是不是托管状态\r\n        optional bool just_view = 5;        // 是不是旁观玩家\r\n    }\r\n    repeated _Inner players = 10;            // 要合并的玩家\r\n    optional bool just_view = 11;          //\r\n    optional int32 total_call_time_count = 12;  // 使用延时的总次数\r\n}\r\n\r\n\r\n// 创建MTT赛事（内部使用）\r\n//cmd: 20004: web->mtt_hall\r\nmessage EvtCreateMTTEvent{\r\n    optional string openid = 1;             //创建者openid\r\n    optional string event_name = 2;         //赛事名称\r\n    optional int32 roomid = 3;              //赛事配置信息id\r\n    optional int32 seat_limit = 4;          //几人桌\r\n    optional int32 discussion_id = 5;       //讨论组id\r\n    optional int32 group_id = 6;            //俱乐部id\r\n    optional string dst_openid = 7;         //与某人聊天时创建\r\n    optional string group_name = 8;         //俱乐部名称\r\n    optional int32 need_enrollment = 9;     //是否开启报名控制 0否 1是\r\n    optional int32 key_type = 10;            //0：金币，1：房卡\r\n    optional int32 cost_card = 11;          //消耗的房卡数量（房卡开局时填写）\r\n    optional int32 begin_time = 12;         //比赛开始时间 （时间戳）\r\n    optional int32 stop_enroll_level = 13;  //终止报名盲注级别\r\n    optional int32 rebuy_times = 14;        //重购次数\r\n    optional int32 is_addon_buy = 15;       //是否开始增购 0否， 1是\r\n    optional int32 is_halftime = 16;        //是否中场休息 0否， 1是\r\n    optional int32 is_hunter = 17;          //是否开启猎人赛 0否 1是\r\n    optional string manager_ids = 18;       //管理员ids列表 （openid逗号分隔）\r\n    optional string req_uuid = 19;          //web请求标识，用于接口内部订阅发布模式返回数据\r\n    optional int32 restrict_gps_ip= 20;     // GPS和IP限制开启 0否， 1是\r\n}\r\n\r\n// mtt赛事配置信息\r\nmessage MTTRoomConf {\r\n    optional int64 init_chips = 1;                   // 初始筹码\r\n    optional int64 entry_fee = 2;                    // 报名费\r\n    optional int64 server_fee = 3;                   // 服务费\r\n    optional int32 raise_interval = 4;               // 升盲时长,单位秒\r\n    optional int32 stop_enroll_level = 5;            // 延迟入场盲注级别, 增购的盲注级别\r\n    optional int32 seat_limit = 6;                   // 牌桌类型, 单桌人数\r\n    optional int32 player_min = 7;                   // 最少开赛人数\r\n    optional int32 player_max = 8;                   // 最大人数限制\r\n    repeated int64 call_time_gold_list = 9;          // 游戏内延时消耗金币数量\r\n    optional int32 max_rebuy_times = 10;             // 最大重购次数\r\n    optional int64 rebuy_gold = 11;                  // 重购所需金币(不含服务费, 实际费用要加上服务费)\r\n    optional int64 rebuy_chips = 12;                 // 重购筹码\r\n    optional int64 addon_gold = 13;                  // 增购所需金币(不含服务费, 实际费用要加上服务费)\r\n    optional int64 addon_chips = 14;                 // 增购筹码\r\n    optional int32 max_addon_times = 15;             // 最大增购次数\r\n    optional int32 rebuy_revive = 16;                // 重购时长\r\n    optional int32 addon_revive = 17;                // 增购时长\r\n    optional int32 is_halftime = 18;                 // 已废弃 -- 1:开启中场休息 0:不开启\r\n    optional int32 begin_time = 19;                  // 开赛时间\r\n    optional int32 service_rate = 20;                // 服务费率 [重购，增购按此费率收服务费，整数值, 如10则表示按 10%收取]\r\n    optional int32 entry_cost_type = 21;             // 指定报名的消耗类型     （0：无消耗 1.消耗金币 2.消耗钻石 3.消耗门票 4.消耗房卡, 5.金币或门票）\r\n    optional int32 rebuy_cost_type = 22;             // 指定重购的消耗类型     (1：金币 2.钻石)\r\n    optional int32 addon_cost_type = 23;             // 指定增购的消耗类型     (1: 金币 2.钻石)\r\n    optional int32 ticket_num = 24;                  // 报名门票数量（官方赛事可能使用门票报名）\r\n    optional int32 is_official = 25;                 // 本场赛是否为官方创建 （0：玩家创建 1：官方创建）\r\n    optional int32 show_rest_cards_cost = 26;        // 查看剩余公共牌需要的钻石数\r\n    repeated int64 call_time_diamond_list = 27;         // call time消耗钻石数\r\n    optional int32 add_on_service_fee = 28;          // 增购服务费\r\n    optional int32 rebuy_service_fee = 29;           // 重购服务费\r\n    optional string cost_fee_desc = 30;              // 消耗费用的描述\r\n    optional string rebuy_cost_fee_desc = 31;        // rebuy消耗费用的描述\r\n    optional string addon_cost_fee_desc = 32;        // addon消耗费用的描述\r\n    optional bool allow_ticket_rebuy_addon = 33;     // 是否允许门票rebuy、addon\r\n    optional int32 max_reentry_times = 34;           // 最大reentry次数\r\n    optional int32 reentry_revive = 35;              // reentry时长\r\n}\r\n\r\n// mtt请求赛事信息\r\n// cmd=6002\r\nmessage MTTDeskInfoReq {\r\n    optional int32 desk_id = 1;             // 牌桌id\r\n}\r\n\r\nmessage MTTDeskInfoRsp {\r\n    optional string name = 1;                       // 牌局名称\r\n    optional int32 player_curr_num = 2;             // 赛事参加人数\r\n    optional int32 player_max = 3;                  // 最大人数限制\r\n    optional int64 entry_fee = 4;                   // 报名费\r\n    optional int64 server_fee = 5;                  // 服务费\r\n    optional int64 init_chips = 6;                  // 初始记分牌\r\n    optional int32 raise_interval = 7;              // 升盲时长, 单位秒\r\n    optional int32 desk_num = 8;                    // 当前牌桌号\r\n    optional int32 desk_player_number = 9;          // 单桌人数\r\n    optional int32 stop_enroll_level = 10;          // 终止报名的盲注级别\r\n    optional int32 rebuy_times = 11;                // 重购次数\r\n    optional int32 addon_times = 12;                // 增购次数\r\n    optional int32 has_half_time = 13;              // 已废弃 -- 是否中场休息, 1:是,0:否\r\n    optional int32 is_hunter = 14;                  // 是否猎人赛\r\n    repeated ManagerList manager_list = 15;         // 管理员openid\r\n    optional int32 pass_time = 16;                  // 比赛已进行时长,单位秒\r\n    optional int64 total_pool = 17;                 // 总奖池\r\n    optional int32 winners_num = 18;                // 钱圈人数\r\n    repeated MTTRankConfList rank_list = 19;        // 奖励配置\r\n    optional int32 cur_desk_num = 20;               // 当前桌子数量\r\n    optional int32 total_rebuy_times = 21;               // 当前重构总数\r\n    optional int32 total_addon_times = 22;               // 当前增购总数\r\n    optional int32 reward_base = 23;                // 奖池构成基数\r\n    optional string event_desc = 24;                // 赛事简介\r\n\toptional float margin = 25;                     // 保证金\r\n    optional int32 player_min = 26;                 // 最少开赛人数\r\n    optional string group_name = 27;                // 创建牌局的俱乐部名称\r\n    optional string margin_new = 28;                // 保证金\r\n    optional string cost_fee_desc = 29;             // 消耗费用的描述\r\n}\r\n\r\n// 奖励配置列表\r\nmessage MTTRankConfList {\r\n    optional string rank = 1;                       // 排名\r\n    optional int64 reward = 2;                      // gold奖励\r\n    optional int64 diamonds = 3;                    // 钻石奖励\r\n    optional string ticket = 4;                     // 门票奖励\r\n    optional string ticket_name = 5;                // 门票名\r\n    optional MttExtraPrize extra_prize = 6;         // 个人额外奖励信息\r\n    optional int32 contribute_team_score = 7;       // 玩家贡献的团队分数\r\n}\r\n\r\n// 团队赛额外奖励信息\r\nmessage MttExtraPrize {\r\n    optional int64 reward = 1;                     // gold奖励\r\n    optional string ticket = 2;                    // 门票奖励\r\n    optional string ticket_name = 3;               // 门票名\r\n    optional int32 ticket_num = 4;                 // 门票数量\r\n}\r\n\r\n// 管理员列表\r\nmessage ManagerList {\r\n    optional string openid = 1;                     // 管理员openid\r\n    optional string nick = 2;                       // 管理员昵称\r\n}\r\n\r\n\r\n// 获取阶段统计数据\r\nmessage MTTPeriodData {\r\n    optional int32 rank = 1;                     // 排行\r\n    optional string nick = 2;                    // 昵称\r\n    optional int64 remain_chips = 4;             // 记分牌\r\n    optional int64 kill_num = 5;                 // 人头数\r\n    optional int32 uin = 6;                      // uin\r\n    optional int32 bb_num = 7;                   // 大盲数\r\n    optional string openid = 8;                  // 玩家openid\r\n    optional int32 sex = 9;                      // 玩家性别\r\n    optional int32 addon_times = 10;             // 增购数\r\n    optional int32 rebuy_times = 11;             // 重构数\r\n    optional bool eliminated = 12;               // true: 被淘汰 false: 未被淘汰\r\n    optional string team_icon = 13;               // 队伍图标\r\n    optional int32 desk_id = 14;                 // 牌桌ID\r\n    optional int32 desk_num = 15;                // 牌桌编号\r\n}\r\n\r\n\r\nmessage ViewerList {\r\n    optional string nick = 1;               // 昵称\r\n    optional string portrait = 2;           // 头像url\r\n    optional int32 is_online = 3;           // 是否在线 1:在线 0:离线\r\n    optional int32 uin = 4;                 // uin\r\n    optional string openid = 5;             // 用户openid\r\n    optional int32 sex = 6;                 // 用户性别\r\n    optional string flag_icon = 7;             // 国旗url\r\n}\r\n\r\n// cmd: 6067, 中场休息通知\r\nmessage MTTRestNtf {\r\n    optional int32 status = 1;                      // 牌桌状态变为5:中场休息\r\n    optional int32 rest_remain_time = 2;            // 中场休息剩余时间,进入中场休息的时候使用\r\n    optional int32 on_rest = 3;                     // 1: 进入中场休息，0: 取消中场休息，取消的时候status恢复为休息前的状态\r\n}\r\n\r\n// cmd: 6068, 用户不可重购增购的通知\r\nmessage MTTLoseRebuyAddonNtf {\r\n    optional int32 lose_rebuy_addon = 1;            // 1:不可重购也不可增购\r\n    optional int32 rank_wait = 2;                 // 是否等待排名，等待排名是不会立刻弹出结算框，要客户端设置提示语，1：等待排名；0：立刻输掉了不需要等待\r\n}\r\n\r\n// cmd: 6069, 中场休息停止涨盲定时器通知,进入中场休息时一定会发送\r\nmessage MTTStopBlindTimerNtf{\r\n    optional int32 time_for_raise_blind = 1;        // 停止涨盲时的剩余时间\r\n}\r\n\r\n// cmd: 6071, 赛事开始,通知桌子号码\r\nmessage MTTDeskNumNtf{\r\n    optional int32 desk_num = 1;        // 牌桌号码\r\n}\r\n\r\n// cmd: 6073, 服务器内部使用\r\nmessage MTTPullUserNtf{\r\n    optional int32 event_id = 1;            // 赛事id\r\n    optional int32 desk_id = 2;             // 牌桌id\r\n    optional int32 just_view = 3;           // 是否是旁观\r\n}\r\n\r\n// cmd: 101, 速度测试接口\r\nmessage SpeedTestReq{}\r\nmessage SpeedTestRsp {\r\n}\r\n\r\n\r\n// cmd: 6074, 玩家请求结算信息\r\nmessage MTTSettleInfoReq {\r\n    optional int32 event_id = 1;       // 赛事id\r\n}\r\n// 服务器回应玩家结算请求为空，收到后发MTTEventMyResult\r\nmessage MTTSettleInfoRsp {\r\n}\r\n\r\n\r\n// 服务器内部命令字, 通用参数\r\nmessage MTTCommonParam {\r\n    optional int32 event_id = 1;       // 赛事id\r\n    optional int32 desk_id = 2;        // 牌桌id\r\n}\r\n\r\n// cmd: 369, 经典场、SNG设置快捷操作类型\r\n// cmd: 6078, MTT设置快捷操作类型\r\nmessage SetShortcutActionReq {\r\n    optional int32 shortcut = 1;       // 快捷操作类型值, 1:看或弃, 2:自动跟, 3:自动看\r\n}\r\nmessage SetShortcutActionRsp {\r\n}\r\n\r\n// cmd: 6079，MTT赛事 实时战绩 - 牌桌\r\nmessage MTTPeriodStatDeskReq {\r\n    // 正数从小到大排序，负数从大到小排序\r\n    // 1牌桌编号 2最高筹码 3最低筹码 4平均筹码\r\n    optional int32 order_by = 1;    // 按哪一项数据进行排序\r\n    optional int32 desk_id = 2;\r\n}\r\nmessage MTTPeriodStatDeskRsp {\r\n    message MTTPeriodStatDeskInfo {\r\n        optional int32 desk_id = 1;             // 牌桌ID\r\n        optional int32 desk_num = 2;            // 牌桌编号\r\n        optional int32 table_size = 3;          // 牌桌大小\r\n        optional int32 exist_players_num = 4;   // 在玩人数\r\n        optional int32 max_chips = 5;           // 最高筹码量\r\n        optional int32 min_chips = 6;           // 最低筹码量\r\n        optional int32 avg_chips = 7;           // 平均筹码量\r\n    }\r\n    repeated MTTPeriodStatDeskInfo desk_list = 1;\r\n}\r\n\r\n// 服务器内部使用\r\nmessage RedirectShortcutTimeout {\r\n    optional int32 desk_id = 1;         // 用户快捷键操作\r\n    optional int32 uin = 2;             // 用户uin\r\n}\r\n\r\n// 防沉迷通知\r\nmessage PreventIndulgeNtf{\r\n    optional int64 win_gold = 1;       // 盈亏\r\n    optional int32 play_time = 2;      // 在线时长\r\n}\r\n\r\n// ======= amoho 命令字 开始\r\n// 内部使用\r\nmessage PlayerCardsFormation {\r\n    message CardsFormation {\r\n        optional int32 share_cards_len = 1;\r\n        optional int32 formation = 2;\r\n        repeated int32 max_cards = 3;\r\n    }\r\n    message SinglePlayerCardsFormation {\r\n        optional int32 uin = 1;\r\n        repeated CardsFormation formations = 2;\r\n    }\r\n    optional int32 desk_id = 1;\r\n    optional string desk_uuid = 2;\r\n    repeated SinglePlayerCardsFormation formations = 3;\r\n}\r\n\r\n// ======= omaha 命令字 结束\r\n\r\n// 奖励配置列表\r\nmessage RankConfList {\r\n    optional int32 rank = 1;                        // 排名\r\n    optional int64 reward = 2;                     // 奖励\r\n}\r\n\r\n// cmd: 7001\r\nmessage InvalidPoolNtf {\r\n    optional int32 uin = 1;\r\n    optional int64 invalid_chips = 2;\r\n    optional int64 remain_chips = 3;\r\n    optional int64 total_chips = 4;\r\n}\r\n\r\n// cmd: 22100 用户被禁止登录\r\nmessage UserForbidLogin {\r\n}\r\n\r\n// ----------------------------------------  Insurance New ---------------------------------------------------\r\n\r\n// cmd: 9100, 达到条件后，服务器通知给客户端弹出多次牌\r\nmessage MultiCardsDetailNtf{\r\n    // 单个注池里面的保单信息\r\n    optional string order_id = 1;                       // 保单id\r\n    optional int32 ahead_uin = 2;                      // 领先玩家的uin\r\n    repeated OrderDetail order_detail = 4;\r\n    optional int32 delay_time = 5;                     // 购买时间，超过这个时间视为放弃购买\r\n    optional int64 pool_gold = 11;                     // 保险池数额?\r\n    optional int64 bet_chips = 12;                     // 领先玩家在这里注池里面下了多少筹码\r\n    optional int32 can_multi_card = 16;                // 是否可以多次发牌 1:可以  0:不可以\r\n    repeated int32 multi_card_count = 17;              // 多次发牌次数列表\r\n    optional int32 risk_type = 23;                     // 0触发保险和多次牌 2只触发多次牌 3只触发保险\r\n    // 是否恢复定时器,只针对领先玩家的定时器,因为领先玩家的定时器可能被暂停,当不是落后玩家确定分池的时候,就该重新启动定时器,否则不能启动定时器\r\n    // 协议分池和多次发牌时，需要对方玩家同意，这时候需要另外一个计时器\r\n    optional int32 resume_timer = 24;                  // 0: 不要恢复定时器；1: 继续启动定时器\r\n    optional int32 risk_round = 26;                    // 当前属于哪一轮的风险控制 1：转牌轮  2：河牌轮\r\n    repeated PlayerProp player_prop = 27;              // 参与保险的玩家的胜率,平率\r\n    repeated PlayerCards player_cards = 28;            // 用户手牌\r\n    optional int32 multi_card_service_fee = 29;        // 多次牌服务费\r\n    optional int32 multi_service_fee_bb_count = 30;      // 多次牌服务费, 大盲的个数\r\n    optional float insurance_fee_percent = 31;           // 保险服务费百分比\r\n    optional float multi_card_fee_percent = 32;          // 多次牌服务费百分比\r\n    optional int32 ahead_player_delay_remain_times = 33;                // 领先玩家保险延时次数\r\n    optional int32 multi_card_approve_player_delay_remain_times = 34;   // 多次牌审批时的延时次数\r\n    optional bool is_overtake = 35;                       // 当前保单的领先者是否为反超 即本次保单与上次保单领先玩家不为同一人\r\n\r\n    message PlayerCards {\r\n        optional int32 uin = 1;\r\n        repeated int32 cards = 2;\r\n        optional int32 seatid = 3;\r\n    }\r\n    optional int32 multi_cards_status = 36;    // 多次牌状态\r\n}\r\n\r\n// cmd: 8100, 达到条件后，服务器通知给客户端弹出保险单\r\nmessage InsuranceDetailNtf{\r\n    // 单个注池里面的保单信息\r\n    optional string order_id = 1;                       // 保单id\r\n    optional int32 ahead_uin = 2;                      // 领先玩家的uin\r\n    repeated OrderDetail order_detail = 4;\r\n    optional int32 delay_time = 5;                     // 购买时间，超过这个时间视为放弃购买\r\n    optional int64 pool_gold = 11;                     // 保险池数额?\r\n    optional int64 bet_chips = 12;                     // 领先玩家在这里注池里面下了多少筹码\r\n    optional int32 can_multi_card = 16;                // 是否可以多次发牌 1:可以  0:不可以\r\n    repeated int32 multi_card_count = 17;              // 多次发牌次数列表\r\n    optional int32 risk_type = 23;                     // 0触发保险和多次牌 2只触发多次牌 3只触发保险\r\n    // 是否恢复定时器,只针对领先玩家的定时器,因为领先玩家的定时器可能被暂停,当不是落后玩家确定分池的时候,就该重新启动定时器,否则不能启动定时器\r\n    // 协议分池和多次发牌时，需要对方玩家同意，这时候需要另外一个计时器\r\n    optional int32 resume_timer = 24;                  // 0: 不要恢复定时器；1: 继续启动定时器\r\n    optional int32 risk_round = 26;                    // 当前属于哪一轮的风险控制 1：转牌轮  2：河牌轮\r\n    repeated PlayerProp player_prop = 27;              // 参与保险的玩家的胜率,平率 \r\n    repeated PlayerCards player_cards = 28;            // 用户手牌\r\n    optional int32 multi_card_service_fee = 29;        // 多次牌服务费\r\n    optional int32 multi_service_fee_bb_count = 30;      // 多次牌服务费, 大盲的个数\r\n    optional float insurance_fee_percent = 31;           // 保险服务费百分比\r\n    optional float multi_card_fee_percent = 32;          // 多次牌服务费百分比\r\n    optional int32 ahead_player_delay_remain_times = 33;                // 领先玩家保险延时次数\r\n    optional int32 multi_card_approve_player_delay_remain_times = 34;   // 多次牌审批时的延时次数\r\n    optional bool is_overtake = 35;                       // 当前保单的领先者是否为反超 即本次保单与上次保单领先玩家不为同一人\r\n    optional int32 multi_cards_status = 36;    // 多次牌状态\r\n}\r\n\r\nmessage OrderDetail {\r\n    optional int32 order_type = 1;                      // 1:break even; 2: same pot;\r\n    optional int64 premium = 2;                         // 保险费\r\n    optional int64 payoff = 4;                          // 回报\r\n    optional string odds = 3;                            // 赔率\r\n}\r\n\r\nmessage PlayerProp {\r\n    optional int32 uin = 1;\r\n    optional string win_prop = 2;                 // 胜率\r\n    optional string same_prop = 3;                 // 平率\r\n}\r\n\r\n// cmd: 9101 9102 9103 450061 600064  购买多次牌\r\nmessage BuyMultiCardsReq{\r\n    optional int64 order_type = 1;                 // 3: multi_cards\r\n    optional int32 bought = 2;                     // 是否是购买，1:是，0:取消购买\r\n    optional int32 client_timeout = 3;             // 标记客户端超时 0：未超时情况下的操作 1 超时情况下的操作\r\n    optional int32 multicard_count = 4;           // 多次发牌的次数\r\n\r\n}\r\nmessage BuyMultiCardsRsp{\r\n}\r\n\r\n// cmd: 8102, 买保险请求(cmd: 8104, omaha保险)\r\nmessage RiskReq{\r\n    // optional string order_id = 1;                // 购买哪个保单\r\n    // optional int64 order_gold = 2;              // 买多少金额\r\n    optional int64 order_type = 3;                 // 1: break even(baoben); 2: same pot(dengli); 3: multi_cards\r\n    optional int32 bought = 4;                     // 是否是购买，1:是，0:取消购买\r\n    // optional int64 claim_gold = 6;              // 预计赔付额度\r\n    // optional int32 risk_round = 8;              // 购买的属于那一轮的保险 1：转牌轮 2.河牌轮\r\n    optional int32 client_timeout = 9;             // 标记客户端超时 0：未超时情况下的操作 1 超时情况下的操作\r\n    optional int32 multicard_count = 10;           // 多次发牌的次数\r\n\r\n}\r\nmessage RiskRsp{\r\n}\r\n\r\n// cmd: 8103, 通知给其他人，谁买了多少保险\r\nmessage InsuranceBuyEvt{\r\n    optional int32 uin = 1;                     // 谁买了保险\r\n    optional string order_id = 5;                // 订单ID\r\n    optional int64 order_gold = 2;              // 买多少金额\r\n    optional int64 order_type = 3;              // 1:break even(baoben); 2:same pot(dengli)\r\n    optional int32 bought = 4;                  // 是否是购买，1:是，0:取消购买\r\n    optional int32 be_canceled = 7;             // 由于非领先玩家弃权造成保单失效，取消领先玩家的购买弹框, 1:是；0:否\r\n    optional int32 left_time = 8;               // 剩余的等待购买保险时间\r\n    optional int64 payout_money = 10;           // 预计赔付额\r\n}\r\n\r\n// cmd: , 请求保单\r\nmessage GetInsuranceOrderReq{\r\n    optional int32 desk_id = 1;                //\r\n}\r\nmessage GetInsuranceOrderRsp{\r\n}\r\n//CMD_NOTIFY_NO_RISK = 26100 玩家allin后当服务器判定不触发风险控制时（多人allin，落后玩家没有反超牌等情况），需吐司提示\r\nmessage NoRiskNtf {\r\n    optional string tips = 1;      // 提示文案\r\n}\r\n\r\n\r\n// 分享牌桌 (cmd 1769)\r\nmessage ShareDeskReq{\r\n    optional int32 desk_id = 1;             // 桌子ID\r\n}\r\n\r\nmessage ShareDeskRsp{\r\n\tmessage ShareDeskLink{\r\n\t\toptional string facebook = 1;                    // facebook分享链接\r\n\t\toptional string messager = 2;                    // Messager分享链接\r\n\t\toptional string whatsapp = 3;                    // Whatsapp分享链接\r\n\t\toptional string twitter_private = 4;             // Twitter(private)分享链接\r\n\t\toptional string twitter_dynamic = 5;             // Twitter(dynamic)分享链接\r\n\t\toptional string google = 6;                      // Google分享链接\r\n\t\toptional string sms = 7;                         // 短信 分享链接\r\n\t\toptional string photo_album = 8;                 // 相册分享链接\r\n\t\toptional string copy_url = 9;                    // 剪切板分享链接\r\n\t\toptional string rests = 10;                      // 其他方式分享链接\r\n\t}\r\n\toptional string message = 1;                         // 分享内容\r\n\toptional string url = 2;                             // 分享链接\r\n\toptional string headline = 3;                        // 分享标题\r\n\toptional ShareDeskLink share_link_dict = 4;          // 分享链接结构体 \r\n}\r\n\r\nmessage UserPauseInfo{\r\n    optional int32 uid=1;\r\n    optional string nick=2;\r\n    optional int32 reason=3;               // 暂停原因 1: 正常筹码不足情况 2：破产---范特西导致筹码为0\r\n}\r\n\r\n// 12067 暂停游戏广播\r\nmessage EvtDeskPause {\r\n    repeated string nick_list = 1;\r\n    optional bool is_paused = 2;\r\n    optional int32 pause_time = 3;\r\n    repeated UserPauseInfo user_pause_info = 4;\r\n}\r\nmessage UserPauseDeskReq {\r\n    optional bool is_paused = 1;     // true 停止， false 开始\r\n}\r\n// 12069 修改用户Ready状态\r\nmessage UserReadyStatusReq {\r\n    optional int32 is_ready = 1;                   // 是否是准备状态0 未准备 1 准备\r\n}\r\nmessage UserReadyStatusRsp {\r\n}\r\n\r\n// 12070 广播用户Ready状态修改\r\nmessage EvtUserReadyStatus {\r\n    optional int32 uin = 1;\r\n    optional int32 is_ready = 2;                   // 是否是准备状态0 未准备 1 准备\r\n}\r\n\r\n// 12071用户设置下一手离开牌桌状态\r\nmessage GameUserLeaveNextHandReq {\r\n    optional int32 leave_status = 1;      // 1:本手牌结束后离开牌桌\r\n}\r\nmessage GameUserLeaveNextHandRsp {\r\n}\r\n\r\n// 12072用户设置下一手站起状态\r\nmessage GameUserObserveNextHandReq {\r\n    optional int32 stand_status = 1;      // 1:本手牌结束后站起\r\n}\r\nmessage GameUserObserveNextHandRsp {\r\n}\r\n\r\n\r\n\r\n\r\n// -------------------------------  多次牌 BEGIN ------------------------------------------\r\n// 多次牌， 通知每轮的牌型 (cmd 1770)\r\nmessage EvtMultiLastShareCard {\r\n    optional MultiCardInfo multi_card_info = 1;         //发多次牌的公共牌\r\n    optional MultiWinner multi_winners = 2;                //每次牌对应的赢家（与多次牌的公共牌顺序对应）\r\n    repeated UserMultiLCard multi_user_cards = 3;               //发多次牌时的牌型变化\r\n\toptional int32 total_round_index = 4;         \t\t// 发多次轮数\r\n\toptional int32 round_index = 5;         \t\t\t// 发多次轮次 0，1，2\r\n\trepeated GameOverResultInfo result = 6;\r\n    optional int32 multi_card_type = 7;                 // 0: 代表比牌 1：代表 发多次牌\r\n}\r\n\r\nmessage UserMultiLCard {\r\n    optional int32 uin = 1;    \r\n\toptional  MultiCard multi_cards = 2;            // 发多次牌的最大牌，以及牌型\r\n}\r\n// -------------------------------  多次牌 END ------------------------------------------\r\n\r\n// 设置自动买入 510 6856 11068 12068\r\nmessage GameUserAutoBuyInCfg {\r\n    optional int32 auto_buy_in_op = 1;     //0 取消 1 设置/修改 2 查询\r\n    optional int32 auto_buy_in_from = 2;\r\n    optional int32 auto_buy_in_to = 3;\r\n\toptional int32 player_uuid= 4;      // zoom用\r\n}\r\n// 自动买入设置返回\r\nmessage GameQueryAutoBuyInCfgRsp {\r\n    optional int32 auto_buy_in_from = 1;\r\n    optional int32 auto_buy_in_to = 2;\r\n}\r\n// 玩家自动买入事件推送 10027\r\nmessage EvtAutoBuyIn {\r\n    optional int32 reason = 1;             //自动买入失败错误码\r\n    optional int32 current_chips = 2;      //玩家当前持有筹码\r\n    optional int32 gold = 3;               //玩家余额\r\n    optional int32 auto_buy_in_from = 4;\r\n    optional int32 auto_buy_in_to = 5;\r\n}\r\n// 房主修改房间设置后 玩家取消自动买入 推送 10028\r\nmessage EvtAutoBuyInCancel {\r\n    optional int32 reason = 1;             //取消自动买入原因\r\n}\r\n\r\n// ----------------------------------- 回收筹码 BEGIN --------------------------------\r\n\r\n// 设置回收筹码 300057\r\nmessage GameUserAutoRecycleChips {\r\n    optional int32 recycle_chips_op    = 1;     //1 设置 2 查询\r\n    optional int32 recycle_chips       = 2;     // 回收筹码量\r\n    optional int32 recycle_max         = 3;     // 最大勾选 0:未勾选 1:勾选\r\n    optional int32 recycle_limit       = 4;     // 自动回收至买入金额勾选 0:未勾选 1:勾选\r\n}\r\n// 回收筹码设置返回 \r\nmessage GameQueryAutoRecycleChipsRsp {\r\n    optional int32 recycle_chips       = 1;     // 回收筹码量\r\n    optional int32 recycle_max         = 2;     // 最大勾选 0:未勾选 1:勾选\r\n    optional int32 recycle_limit       = 3;     // 自动回收至买入金额勾选 0:未勾选 1:勾选\r\n}\r\n// 玩家回收筹码事件推送 300058\r\nmessage EvtAutoRecycleChips {\r\n    optional int32 reason = 1;             //设置回收筹码失败错误码\r\n    optional int32 current_chips = 2;      //玩家当前持有筹码\r\n    optional int32 gold = 3;               //玩家余额\r\n    optional int32 recycle_chips       = 4;     // 回收筹码量\r\n    optional int32 recycle_max         = 5;     // 最大勾选 0:未勾选 1:勾选\r\n    optional int32 recycle_limit       = 6;     // 自动回收至买入金额勾选 0:未勾选 1:勾选\r\n}\r\n\r\n// -----\r\n\r\n// ------------------------------- MTT -----------------------------------------------\r\n// 盲注结构表\r\nmessage MTTBlindsStructure {\r\n    optional int32 level = 1;                             // 级别\r\n    optional int32 small_blind = 2;                       // 小盲\r\n    optional int64 big_blind = 3;                         // 大盲\r\n    optional int64 previous_bet = 4;                      // 前注\r\n    optional int64 upgrade_time = 5;                      // 时长\r\n    optional int32 is_rebuy = 6;                          // 是否可以rebuy 1可以 0不可以 (默认为0)\r\n    optional int32 is_addon = 7;                          // 是否可以addon 1可以 0不可以 (默认为0)\r\n    optional int32 is_break_time = 8;                     // 是否为中场休息等级 1是 0不是 (默认为0)\r\n    optional int32 break_time_remain = 9;                 // 中场休息时长\r\n    optional int32 addon_duration_time = 10;              // addon持续时长\r\n    optional int32 is_reentry = 11;                       // 是否可以reentry 1可以 0不可以 (默认为0)\r\n}\r\n\r\n// cmd: 6080, 盲注结构\r\nmessage MTTBlindsStructureReq {\r\n    optional int32 desk_id = 1; // desk\r\n}\r\n\r\nmessage MTTBlindsStructureRsp {\r\n    repeated MTTBlindsStructure blinds_structure_list = 1;     // 盲注结构\r\n}\r\n\r\n// cmd: 6081, 奖励配置\r\nmessage MTTRankConfListReq {\r\n    optional int32 desk_id = 1; // desk\r\n}\r\n\r\nmessage MTTRankConfListRsp {\r\n    optional int64 total_pool = 1;                             // 总奖池\r\n    optional int32 signed_up_player_num = 2;                    // 报名参赛人数\r\n    optional int32 reward_circle = 3;                          // 奖励圈人数\r\n    repeated MTTRankConfList rank_list = 4;                    // 奖励配置\r\n    optional string total_pool_str = 5;                          // 总奖池 新\r\n    optional string hunt_income = 6;                           // 猎杀收入\r\n}\r\n\r\n// cmd: 6082, 旁观玩家列表\r\nmessage MTTViewerListReq {\r\n    optional int32 desk_id = 1; // desk\r\n}\r\n\r\nmessage MTTViewerListRsp {\r\n    repeated ViewerList viewer_list = 1;                       // 旁观玩家列表\r\n}\r\n\r\n// cmd: 6083, 排名玩家列表\r\nmessage MTTRankListReq {\r\n    optional int32 desk_id = 1; // desk id\r\n}\r\n\r\nmessage MTTRankListRsp {\r\n    repeated MTTPeriodData desk_data_list = 1;                 // 桌子内战绩列表信息\r\n    repeated MTTPeriodData event_data_list = 2;                // 赛事总战绩列表信息\r\n}\r\n\r\n// cmd: 6084, 实时战绩请求\r\nmessage MTTRealTimeRecordReq {\r\n}\r\n\r\nmessage MTTTeamInfo {\r\n    optional string team1_name = 1;\r\n    optional string team1_icon = 2;\r\n    optional int32 team1_total_signup_num = 3;\r\n    optional int32 team1_remain_player_num = 4;\r\n    optional int32 team1_score = 5;\r\n    optional string team2_name = 6;\r\n    optional string team2_icon = 7;\r\n    optional int32 team2_total_signup_num = 8;\r\n    optional int32 team2_remain_player_num = 9;\r\n    optional int32 team2_score = 10;\r\n}\r\n\r\n// 实时战绩响应和实时战绩变动通知\r\nmessage MTTRealTimeRecordRsp {\r\n    optional int32 event_round_count = 1;                       // 总手数\r\n    optional int32 average_time = 2;                            // 已废弃 -- 每手平均时间，单位秒\r\n    optional int64 average_left_chips = 3;                      // 平均筹码量(当前剩余玩家的总筹码量/剩余玩家数)\r\n    optional int32 signed_up_player_num = 4;                    // 报名参赛人数\r\n    optional int32 playing_player_num = 5;                      // 在比赛的人数\r\n    optional int32 time_for_raise_blind = 6;                    // 距离下一次升盲还剩多少时间\r\n    optional int32 upgrade_time = 7;                            // 升盲时间\r\n    optional int32 rest_remain_time = 8;                        // 已废弃 -- 中场休息剩余时间\r\n    optional int32 stop_enroll_level = 9;                       // 终止报名盲注级别\r\n    optional int32 mtt_elapsed_time = 10;                       // 比赛进行时间\r\n    optional int32 current_rank = 11;                           // 已废弃 -- 当前还在参赛时的用户排名 -- 迁移到战绩个人数据\r\n    optional int64 max_left_chips = 12;                         // 剩余玩家中筹码最大值\r\n    optional int64 min_left_chips = 13;                         // 剩余玩家中筹码最小值\r\n    optional int32 total_rebuy_times = 14;                      // 当前重构总数\r\n    optional int32 total_addon_times = 15;                      // 当前增购总数\r\n    optional int32 playing_desk_num = 16;                       // 正在游戏中的桌子数量\r\n    optional int64 total_buyin_chips = 17;                      // 总买入\r\n    optional MTTBlindLevel level = 18;                          // MTT盲注级别配置\r\n    optional int32 total_desk_num = 19;                         // 现有总牌桌数\r\n    optional int32 break_time_status = 20;                      // 0 非休息阶段 1 等待休息中 2 休息中\r\n    optional int32 break_time_remain = 21;                      // 剩余休息时间\r\n    optional MTTTeamInfo team_info = 22;                        // 团队赛信息\r\n    optional int32 is_reentry = 23;                             // 是否re-entry 0 :代表rebuy 其他: 代表re-entry\r\n    optional string total_pool_str = 24;                        // 总奖池 新\r\n}\r\n\r\n// cmd: 6087, 实时战绩个人数据\r\nmessage MTTRealTimeRecordPersonalReq {\r\n    optional int32 desk_id = 1; // desk id\r\n}\r\n\r\nmessage MTTRealTimeRecordPersonalRsp {\r\n    optional int32 current_rank = 1;                            // 当前还在参赛时的用户排名\r\n}\r\n\r\n// cmd: 6088, 赛事排名\r\nmessage MTTEventRankListReq {\r\n    optional int32 desk_id = 1; // desk id\r\n}\r\n\r\nmessage MTTEventRankListRsp {\r\n    repeated MTTPeriodData event_data_list = 1;                // 赛事总战绩列表信息\r\n}\r\n\r\n// cmd: 6091, 牌桌内排名\r\nmessage MTTDeskRankListReq {\r\n    optional int32 desk_id = 1; // desk id\r\n}\r\n\r\nmessage MTTDeskRankListRsp {\r\n    repeated MTTPeriodData desk_data_list = 1;                 // 桌子内战绩列表信息\r\n}\r\n\r\n// cmd: 6092 刷新赛事addon阶段信息\r\nmessage MTTRefreshAddonInfo {\r\n    optional int32 event_id = 1;                               // 赛事id\r\n    optional int32 addon_num = 2;                              // addon人数\r\n    optional int32 game_player_num = 3;                        // 参数人数\r\n    optional int32 eliminated_player_num = 4;                  // 已经淘汰人数\r\n    optional int32 reward_player = 5;                          // 钱圈人数\r\n    optional int32 time_remain = 6;                            // 剩余时间\r\n}\r\n\r\n// cmd: 6093 客户端主动查询赛事addon阶段信息\r\nmessage MTTQueryAddInfo {\r\n    optional int32 event_id = 1;                               // 赛事id\r\n}\r\n\r\n// cmd: 6094 刷新赛事break time阶段信息\r\nmessage MTTRefreshBreakTimeInfo {\r\n    optional int32 event_id = 1;                               // 赛事id\r\n    optional int32 break_time_status = 2;                      // 0 非休息阶段 1 等待休息中 2 休息中\r\n    optional int32 break_time_remain = 3;                      // 剩余休息时间\r\n}\r\n// ------------------------------------ MTT ----------------------------------------------\r\n\r\n// 15101  # 操作超时 掉线查询玩家是否在线 请求\r\nmessage DisconnectionProtectionServerQueryOnline {\r\n    optional int32 desk_id = 1; // desk id\r\n}\r\n\r\n// 15102  # 操作超时 掉线查询玩家是否在线 回复\r\nmessage DisconnectionProtectionQueryRsp {\r\n    optional int32 desk_id = 1; // desk id\r\n    optional int32 uid = 2;\r\n}\r\n\r\n// 15103  # 用户正在进行掉线保护 通知\r\nmessage UserInDisconnectProtectionNotify {\r\n    optional int32 desk_id = 1; // desk id\r\n    optional int32 uid = 2;\r\n    optional int32 remain_time = 3;\r\n}\r\n\r\n\r\n// 26001  # 坐下的时候检测有没有被vpip限制拦截，优先级最高\r\nmessage UserVpipLimitAuthCheckReq {}\r\nmessage UserVpipLimitAuthCheckRsp {\r\n    optional int32 reason = 1;                  // 0为通过检测, 1: 为上桌限制, 2: 为维护限制\r\n    optional int32 maintenance_remain = 2;      // 被维护限制的时候，显示剩余冷却时间\r\n    optional int32 is_exchange_chips = 3;          // 本桌兑换的筹码量 0：未兑换过  1: 兑换过 \r\n}\r\n\r\nmessage PlayerSwitchTag {\r\n    optional int32 uid = 1;\r\n    optional int32 switch = 2;\r\n}\r\nmessage PlayerSwitchTagRsp {\r\n   \r\n}\r\n\r\n// web3 牌加密逻辑    --------------------------------------------------------------------------------- begin\r\n// Ntf后缀 为服务器通知\r\n// Req后缀 为客户端请求\r\n// 开始洗牌阶段通知\r\nmessage ShuffleCardNtf {\r\n    optional int32 active_uin = 1;      // 当前活动uid（洗牌玩家uid）\r\n    repeated uint32 deck_cards = 2;     // 一副牌（当接收消息者不是 player, 此字段为空）\r\n    optional bool need_shuffle_deck = 3; // 是否需要在洗牌加密逻辑中 加入打乱牌序逻辑\r\n    optional int32 shuffle_status = 4;   // 桌子的洗牌状态   NULL=0  SHUFFLE=1洗牌   ENCRYPT=2加密   PKE=3公开密钥加密     FINISH=4结束\r\n    optional int32 desk_id = 5;          // desk id\r\n    optional string server_public_pem = 6;  // 服务器公钥\r\n    optional string shuffle_id = 7;       // 洗牌id\r\n}\r\n\r\n// 服务器通知 玩家加密牌\r\nmessage EncryptCardNtf {\r\n    optional int32 uin = 1;                              // 当前活动uin（加密玩家uid）\r\n    repeated DeckCardInfo deck_cards_info_list = 2;      // uid及整副牌 列表  -- 服务器把洗牌的加密结果分成N份(N==玩家数量)\r\n    optional int32 shuffle_status = 3;                   // 桌子的洗牌状态\r\n    optional int32 desk_id = 4;                          // desk id\r\n    optional string shuffle_id = 5;       // 洗牌id\r\n}\r\n\r\n// 通知解密人 用每个人的公钥 对自己那副牌的每张牌的密钥 进行 加密 -- 生成N副牌 ME_Y_PKA ME_Y_PKB ....\r\nmessage UserPubKeyEncryptNtf {\r\n    optional int32 active_uin = 1;                            // 发给谁\r\n    repeated UserPubKeyInfo user_pub_key_info_list = 2;       // 在玩玩家的所有公钥信息 的列表\r\n    repeated uint32 encrypt_deck_cards = 3;                   // 玩家在加密阶段完成后 自己的那整加密Y那副牌 列表\r\n                                                        // 好像没什么用？ 客户端存了？ 或者还有给一副明牌字段 让客户端能在清缓存的情况下反向解出来？ 或者清缓存后 服务器要有一套针对单个玩家\r\n                                                        // 生成 洗牌+加密后的逻辑\r\n    repeated DeckCardInfo deck_cards_info_list = 4;     // uid及整副牌 列表\r\n    optional int32 shuffle_status = 5;                  // 桌子的洗牌状态\r\n    optional int32 desk_id = 6;                         // desk id\r\n    optional string shuffle_id = 7;       // 洗牌id\r\n}\r\n\r\n// 洗牌请求\r\nmessage ShuffleCardReq {\r\n\r\n    repeated uint32 deck_cards = 1;     // 一副牌（当接收消息者不是 player, 此字段为空）\r\n\r\n    optional string seed_hash = 2;\r\n\r\n    optional string pub_key = 3;        // 用于解密时 传密钥的 公钥\r\n}\r\n\r\n// 玩家及一副牌信息\r\nmessage DeckCardInfo{\r\n    optional int32  uin = 1;               // uid\r\n    repeated uint32 deck_cards = 2;        // 整副牌\r\n}\r\n\r\n// 玩家加密牌请求\r\nmessage EncryptCardReq {\r\n    optional int32 active_uin = 1;                      // 当前活动uid（加密玩家uid）\r\n    repeated DeckCardInfo deck_cards_info_list = 2;     // uid及整副牌 列表  -- 玩家解开N副牌自己的洗牌密钥 再对自己的那副牌52张分别加密Y\r\n}\r\n\r\n// 玩家公钥信息\r\n\r\nmessage UserPubKeyInfo {\r\n\r\n    optional int32 uin = 1;              // 玩家uid\r\n\r\n    optional string pub_key = 2;          // 玩家公钥\r\n\r\n}\r\n\r\n// 解密时的 牌及牌密钥\r\n\r\nmessage CardDecryptInfo {\r\n\r\n    optional int32 card_index = 1;           // 牌下标\r\n\r\n    optional string encrypt_key = 2;         // 对应某张牌用 {接收牌的玩家的公钥} 加密 {解密人的秘钥} 后的结果\r\n\r\n}\r\n\r\n\r\n// 解密玩家客 用 每个玩家 公钥 + (自己那副的)每张牌的密钥 生成的 每个玩家的解密信息\r\n\r\nmessage PubKeyDecryptCardsInfo {\r\n\r\n    optional int32 uin = 1;              // uid\r\n\r\n    repeated CardDecryptInfo card_decrypt_info_list = 2;\r\n\r\n}\r\n\r\n// 解密人生成的整个桌子的玩家 的解密信息  第一个回复的人为解密人\r\n\r\nmessage UserPubKeyEncryptReq {\r\n\r\n    optional int32 uin = 1;                                                   // 解密人uid\r\n\r\n    repeated PubKeyDecryptCardsInfo pub_key_decrypt_cards_info = 3;           // 解密信息\r\n\r\n}\r\n\r\n// 客户端 解密时的 牌及牌密钥\r\n\r\nmessage ClientCardDecryptInfo {\r\n\r\n    optional int32 card_index = 1;           // 牌下标\r\n\r\n    optional string encrypt_key = 2;         // 对应某张牌用 {接收牌的玩家的公钥} 加密 {解密人的秘钥} 后的结果\r\n\r\n    optional string server_key = 3;          // 加密阶段 server的密钥\r\n\r\n}\r\n\r\n//发牌数据 -- 某个玩家\r\nmessage DispatchCardInfo {\r\n\r\n    optional int32 uin = 1;                                   // 发给谁\r\n\r\n    repeated ClientCardDecryptInfo card_decrypt_info_list = 2; // 具体发给玩家的 牌信息\r\n\r\n    repeated DeckCardInfo deck_cards_info_list = 3;           // 加密阶段 完成后 N副 加密的牌  desk_AY_SY desk_BY_SY ...... 目前看没什么用\r\n\r\n    optional int32 decrypt_uin = 4;                           // 解密人的uid\r\n\r\n}\r\n\r\n// 公共牌在发牌的信息\r\nmessage PublicCardInfo {\r\n\r\n    optional int32 uin = 1;                                   // 发给谁\r\n\r\n    optional ClientCardDecryptInfo card_decrypt_info = 2;     // 公共牌\r\n\r\n    optional string server_key = 3;                           // 加密阶段 server的密钥\r\n\r\n    optional int32 decrypt_uin = 4;                           // 解密人的uid\r\n\r\n}\r\n\r\n// 加密阶段时的 牌密钥\r\nmessage CardSecretInfo {\r\n\r\n    optional int32 card_index = 1;           // 牌下标\r\n\r\n    optional string secret_key = 6;          // 加密阶段时 解密的密钥\r\n\r\n}\r\n\r\n// 收集密钥通知\r\nmessage CollectDecryptInfoNtf {\r\n    optional int32 uin = 1;\r\n    optional int32 desk_id = 2;                               // desk id\r\n}\r\n\r\n// 客户端上报 加密阶段的 明文密钥\r\nmessage CollectDecryptInfoReq {\r\n    repeated CardSecretInfo card_secret_info_list = 1;\r\n    optional string private_key = 2;\r\n    optional string shuffle_id = 3;       // 洗牌id\r\n}\r\n// 玩家上报公共牌明牌\r\nmessage UserShareCardsReportReq {\r\n    repeated int32 share_cards=1[packed=true]; // share cards\r\n}\r\n\r\n// 收集密钥超时通知   16012   //收集密钥超时  通知不用区分游戏类型 洗牌加密时的 超时类型  NULL = 0   SHUFFLE = 1 ENCRYPT = 2  PKE = 3\r\nmessage CollectSecretKeyTimeoutNtf{\r\n    optional int32 uin = 1;              // uid\r\n}\r\n\r\n// 洗牌超时提示  16013\r\nmessage ShuffleTimeoutNtf{\r\n}\r\n\r\n//release.2003 添加\r\n// 加密历史数据查询\r\nmessage EncryptionCardHistoryReq{\r\n    optional string hand_id = 1;   // uuid / desk.uuid  MyPlayRecordListRsp返回的hand_id\r\n    optional int32 desk_id = 2;     // desk id\r\n}\r\n// 加密历史数据回复\r\nmessage EncryptionCardHistoryRsp{\r\n    // 解密时的 密钥信息 secret_key为解密人的密钥\r\n    message CardDecryptInfo {\r\n        optional string secret_key = 1;           // 密钥\r\n        optional string server_key = 2;           // 加密阶段 server的密钥\r\n        optional string encrypt_card_value = 3;   // 加密后的牌值\r\n        optional string real_card_value = 4;      // 验证工具的实际牌值\r\n        optional int32 uin = 5;                   // uin\r\n        optional string card_owner = 6;           // 持牌的对应玩家昵称 也可能是 公共牌(BOARD)  未发的牌：UNDEALT\r\n        optional int32 card_owner_type = 7;       // 持牌类型 见EncryptValidateCardOwnerType\r\n        optional int32 card_index = 8;            // 牌下标\r\n        optional int32 ori_real_card_value = 9;   // 服务器的原始实际牌值\r\n    }\r\n    // 公私钥信息\r\n    message PublicPrivateKeyInfo{\r\n        optional int32 uin = 1;              // uin\r\n        optional string nickname = 2;        // 玩家昵称\r\n        optional string texas_role = 3;      // 座位角色\r\n        optional string pub_key = 4;         // 公钥\r\n        optional string pri_key = 5;         // 私钥\r\n    }\r\n    // 洗牌阶段信息\r\n    message ShuffleDeckInfo{\r\n        optional string cur_nickname = 1;        // 当前洗牌玩家昵称\r\n        repeated uint32 deck_cards = 2;          // 一副牌（当接收消息者不是 player, 此字段为空）\r\n        optional string next_nickname = 3;       // 下个洗牌玩家昵称\r\n    }\r\n    message EncryptInfo{\r\n        // 每个参与加密人自己的加密数据\r\n        message EncryptDeckCardInfo{\r\n            optional string cur_nickname = 1;      // 当前加密玩家昵称\r\n            repeated uint32 deck_cards = 2;        // 整副牌\r\n            optional bool is_decrypt_user = 3;     // 是否为解密人\r\n        }\r\n        repeated EncryptDeckCardInfo encrypt_deck_card_info_list = 1;    // 加密信息\r\n        optional int32 deck_mount = 2;                                   // 服务器复制 N 份牌组，并传输给玩家进行解密 共几副牌\r\n        optional int32 fastest_response_time = 3;                        // 最快响应时间\r\n    }\r\n    optional string hand_id = 1;                                     // 手牌id\r\n    // 第一部分：用于验证的所有参数 玩家手牌->已发出的公共牌->未发牌。玩家的手牌按照：庄位->小盲->大盲->···排列\r\n    // 此数据也用于显示 客户端 Order of the shuffled deck (Tap on cards to quickly copy parameters) 部分内容\r\n    repeated CardDecryptInfo card_decrypt_info_list = 2;             // 牌的解密信息\r\n    // 第二部分：加密发牌、洗牌过程的日志   按照所有玩家的位置排列，排列顺序：从庄位->小盲->大盲->UTG->UTG+1->UTG+2…\r\n    // 展示所有玩家的公钥，但是私钥只展示自己的。\r\n    repeated PublicPrivateKeyInfo public_private_key_info_list = 3;  // 玩家公私钥信息列表\r\n    // 洗牌阶段\r\n    repeated ShuffleDeckInfo shuffle_deck_info_list = 4;             // 洗牌信息列表\r\n    // 加密阶段\r\n    optional EncryptInfo encrypt_info = 5;                           // 加密阶段数据\r\n    // 发牌阶段 数据就是第一部分：用于验证的所有参数 的内容\r\n    // repeated CardDecryptInfo card_decrypt_info_list = 2;             // 牌的解密信息\r\n    optional int32 game_over_ts = 6;                               // 牌局结算时间\r\n}\r\n\r\n// token mtt reentr/addon拉取订单\r\n// cmd 6097 不同玩法 做相应偏移\r\nmessage TokenMttCreateOrderReq {\r\n    optional int32 transfer = 1;  // 见TransferType 说明  reentry：12  addon: 13\r\n}\r\n\r\nmessage TokenMttCreateOrderRsp {\r\n    optional int32 transfer = 1;  // 见TransferType 说明  reentry：12  addon: 13\r\n    optional int64 order_id = 2;  // 订单id\r\n}\r\n\r\n// 鱿鱼游戏相关信息\r\nmessage SquidGameInfo {\r\n    optional int32 squid_game_on_off = 1;   // 鱿鱼游戏开关 0：关闭 1：开启\r\n    optional int32 minimum_players = 2;     // 鱿鱼游戏 最少人数\r\n    optional int32 ante_per_squid = 3;      // 鱿鱼奖励金额\r\n}\r\n\r\n//退出时弹窗  鱿鱼游戏状态是进行中 且 没有获得鱿鱼的人 弹提示\r\n// 鱿鱼游戏 在进行中时的 相关信息\r\nmessage SquidInGameInfo {\r\n    optional int32 squid_status = 1;   // 鱿鱼游戏状态 取值见宏定义SquidStatus\r\n    message UserInfo {\r\n        optional int32 uin = 1;        // uin\r\n        optional bool has_squid = 2;   // 是否已经获取鱿鱼\r\n        optional bool has_exit =  3;   // 是否已经获取鱿鱼\r\n\r\n    }\r\n    repeated UserInfo user_info_list = 2;\r\n}\r\n\r\n//鱿鱼进程弹窗通知\r\nmessage SquidGameProgressNtf {\r\n    optional int32 safe_count = 1;                 // 已获得鱿鱼人数\r\n    optional int32 capturing_count = 2;            // 未获得鱿鱼人数\r\n    optional SquidUserInfo user_info = 3;          // 主池获得玩家信息\r\n}\r\n\r\n// 鱿鱼玩家信息\r\nmessage SquidUserInfo {\r\n    optional int32 uin = 1;                  // 被请求的玩家uin\r\n    optional string nick = 2;                // 被请求的玩家昵称\r\n    optional string portrait = 3;            // 头像url\r\n}\r\n\r\n// 玩家鱿鱼结算信息\r\nmessage SquidUserSettleInfo {\r\n    optional SquidUserInfo user_info = 1;        // 玩家信息\r\n    optional int64 chips = 2;                    // 筹码变化 正为赢 负为输\r\n    optional int32 user_settle_type = 3;         // 玩家结算类型 含义见 枚举 UserSettleType\r\n    optional int64 cur_chips = 4;                // 玩家当前筹码\r\n}\r\n\r\n// 鱿鱼结算通知\r\nmessage  SquidGameSettleNtf {\r\n    repeated SquidUserSettleInfo user_settle_info_list = 1;  //\r\n}\r\n\r\n// 桌子结算倒计时  25115\r\nmessage DeskCountDownNtf {\r\n    optional int32 delay_time = 1;                 // 倒计时时间 默认5秒\r\n    optional int32 dismiss_reason = 2;\r\n}\r\n\r\n// 保险中落后玩家的反超牌\r\nmessage Outs {\r\n    optional int32 type = 1;                     // 打平1, 胜利2\r\n    optional int32 card = 2;                     // 牌值\r\n}\r\n\r\nmessage PlayerCards {\r\n    optional int32 uin = 1;\r\n    repeated int32 cards = 2;\r\n    optional int32 seat_id = 3;\r\n}\r\n\r\n// 25200 保险菜单通知\r\nmessage InsuranceMenuNtf{\r\n    optional string order_id = 1;                               // 保单id\r\n    optional int32 ahead_uin = 2;                               // 领先玩家的uin\r\n    optional int32 ahead_player_delay_remain_times = 3;         // 领先玩家保险延时次数\r\n    optional int64 ahead_player_pot_chips = 4;                  // 领先玩家的底池筹码\r\n    optional int32 delay_time = 5;                              // 购买时间，超过这个时间视为放弃购买\r\n    optional bool is_mandatory_purchase_outs_out_limit = 6;                       // outs是否超限\r\n    optional bool is_mandatory_purchase = 7;                    // 此轮是否为强制购买\r\n    repeated Outs outs_card_list = 8;                           // 反超牌列表\r\n    optional int32 behind_uin = 9;                              // 落后玩家的uin\r\n    repeated PlayerCards player_cards = 10;                     // 用户手牌\r\n    optional int64 pre_premium = 11;                            // 本轮的上一次保险的投保额\r\n    optional int64 insurance_pot = 12;                          // 保险底池\r\n    optional int64 min_mandatory_purchase_premium = 13;         // 强制购买的保险(指翻牌圈购买了保险没击中，第二次购买保险的用户) 的 最小投保额\r\n    optional int64 total_start_delay_time = 14;                 // 保险计时器 第一次启动的时间\r\n}\r\n\r\n// 保险买入请求\r\nmessage InsuranceBuyReq{\r\n    optional string order_id = 1;                             // 保单id\r\n    optional bool is_bought = 2;                              // 是否是购买\r\n    repeated Outs selected_outs_card_list = 3;                // 选择的反超牌列表\r\n    optional int64 premium = 4;                               // 投保额\r\n    optional int64 payoff = 5;                                // 赔付额 客户端计算出来的 后面服务器进行校验 校验失败则买入失败\r\n    optional int64 unselected_outs_premium = 6;               // 强制投保额\r\n}\r\n\r\n// 保险买入通知\r\nmessage InsuranceBuyNtf{\r\n    optional int32 ahead_uin = 1;                             // 领先玩家的uin\r\n    optional string order_id = 2;                             // 保单id\r\n    optional bool is_bought = 3;                              // 是否是购买\r\n    optional int64 premium = 4;                               // 投保额\r\n}\r\n\r\n// 公共牌击中保险的信息\r\nmessage InsuranceHitInfo {\r\n    optional int32 card = 1;        // 发的公共牌牌值\r\n    optional int32 card_hit_type = 2;   // 牌类型 见OutsHitType\r\n    optional int64 payoff = 3;      // 赔付额\r\n    optional int32 uin = 4;             // 领先玩家的uin\r\n}\r\n\r\n// 延时报名提前结束通知  6100\r\nmessage LateRegFinishNtf {\r\n    optional int32 reason = 1;    // 见  NULL:0, RAISE_BLIND: 1,ENTER_MONEY_CIRCLE: 2,ENTER_FINAL: 3\r\n}\r\n\r\n// 玩家赛事实时信息 更新点: 进桌 或 当前牌桌每手开始前更新\r\nmessage MttUserRealTimeData {\r\n    optional int32 uin = 1;                         // uin\r\n    optional int32 late_reg_count_down_time = 2;    // 延时报名倒计时\r\n    optional int64 average_left_chips = 3;          // 平均筹码量(当前剩余玩家的总筹码量/剩余玩家数)\r\n    optional int32 reward_player_num = 4;           // 钱圈人数\r\n    optional int32 rank = 5;                        // 我的名次 -1代表未参加\r\n    optional int32 playing_player_num = 6;          // 剩余有筹码人数\r\n}\r\n\r\n//cmd 25301 25302 25303 25304 25305\r\n// 大厅牌局查询玩家退桌时 筹码量\r\nmessage HallGameUserChipsInfoReq{\r\n\r\n}\r\n\r\nmessage HallGameUserChipsInfoRsp{\r\n    optional int64 total_profit = 1;          // 大厅牌局 玩家退出时 剩余筹码量(限定大厅牌局)\r\n}\r\n\r\n"]],0,0,[],[],[]]